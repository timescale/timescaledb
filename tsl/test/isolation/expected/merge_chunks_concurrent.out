Parsed test spec with 4 sessions

starting permutation: s2_show_chunks s3_show_data s1_begin s3_begin s4_modify s2_merge_chunks s1_show_chunks s3_show_chunks s1_show_data s3_show_data s1_commit s1_show_data s3_commit
step s2_show_chunks: select count(*) from show_chunks('readings');
count
-----
    2
(1 row)

step s3_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s1_begin: 
    start transaction isolation level repeatable read;
    select count(*) > 0 from pg_class;

?column?
--------
t       
(1 row)

step s3_begin: 
    start transaction isolation level read committed;
    select count(*) > 0 from pg_class;

?column?
--------
t       
(1 row)

step s4_modify: 
    delete from readings where device=1;
    insert into readings values ('2024-01-01 01:05', 5, 5.0);

step s2_merge_chunks: 
    call merge_all_chunks('readings');

step s1_show_chunks: select count(*) from show_chunks('readings');
count
-----
    1
(1 row)

step s3_show_chunks: select count(*) from show_chunks('readings');
count
-----
    1
(1 row)

step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s3_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:05:00 2024 PST|     5|   5
Mon Jan 01 01:01:00 2024 PST|     2|   2
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           0|           1
(1 row)

step s1_commit: commit;
step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:05:00 2024 PST|     5|   5
Mon Jan 01 01:01:00 2024 PST|     2|   2
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           0|           1
(1 row)

step s3_commit: commit;

starting permutation: s2_show_chunks s1_begin s1_show_data s2_merge_chunks s1_show_data s1_commit s1_show_data s1_show_chunks
step s2_show_chunks: select count(*) from show_chunks('readings');
count
-----
    2
(1 row)

step s1_begin: 
    start transaction isolation level repeatable read;
    select count(*) > 0 from pg_class;

?column?
--------
t       
(1 row)

step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s2_merge_chunks: 
    call merge_all_chunks('readings');
 <waiting ...>
step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s1_commit: commit;
step s2_merge_chunks: <... completed>
step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s1_show_chunks: select count(*) from show_chunks('readings');
count
-----
    1
(1 row)


starting permutation: s2_set_lock_upgrade s2_show_chunks s1_begin s1_show_data s2_merge_chunks s1_show_data s1_commit s1_show_data s1_show_chunks
step s2_set_lock_upgrade: 
    set timescaledb.merge_chunks_lock_upgrade_mode='upgrade';

step s2_show_chunks: select count(*) from show_chunks('readings');
count
-----
    2
(1 row)

step s1_begin: 
    start transaction isolation level repeatable read;
    select count(*) > 0 from pg_class;

?column?
--------
t       
(1 row)

step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s2_merge_chunks: 
    call merge_all_chunks('readings');
 <waiting ...>
step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s1_commit: commit;
step s2_merge_chunks: <... completed>
step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s1_show_chunks: select count(*) from show_chunks('readings');
count
-----
    1
(1 row)


starting permutation: s4_wp_enable s2_show_chunks s1_begin s1_show_data s2_merge_chunks s1_show_data s1_row_exclusive_lock s4_wp_release s1_commit s1_show_data s1_show_chunks
step s4_wp_enable: SELECT debug_waitpoint_enable('merge_chunks_before_heap_swap');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s2_show_chunks: select count(*) from show_chunks('readings');
count
-----
    2
(1 row)

step s1_begin: 
    start transaction isolation level repeatable read;
    select count(*) > 0 from pg_class;

?column?
--------
t       
(1 row)

step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s2_merge_chunks: 
    call merge_all_chunks('readings');
 <waiting ...>
step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s1_row_exclusive_lock: call lock_one_chunk('readings');
step s4_wp_release: SELECT debug_waitpoint_release('merge_chunks_before_heap_swap');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_commit: commit;
step s2_merge_chunks: <... completed>
step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s1_show_chunks: select count(*) from show_chunks('readings');
count
-----
    1
(1 row)


starting permutation: s4_wp_enable s2_show_chunks s1_begin s2_merge_chunks s1_show_data s4_wp_release s1_commit s1_show_data s1_show_chunks
step s4_wp_enable: SELECT debug_waitpoint_enable('merge_chunks_before_heap_swap');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s2_show_chunks: select count(*) from show_chunks('readings');
count
-----
    2
(1 row)

step s1_begin: 
    start transaction isolation level repeatable read;
    select count(*) > 0 from pg_class;

?column?
--------
t       
(1 row)

step s2_merge_chunks: 
    call merge_all_chunks('readings');
 <waiting ...>
step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;
 <waiting ...>
step s4_wp_release: SELECT debug_waitpoint_release('merge_chunks_before_heap_swap');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s2_merge_chunks: <... completed>
step s1_show_data: <... completed>
time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s1_commit: commit;
step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s1_show_chunks: select count(*) from show_chunks('readings');
count
-----
    1
(1 row)


starting permutation: s2_set_lock_upgrade_conditional s4_wp_enable s2_show_chunks s1_begin s1_show_data s2_merge_chunks s1_show_data s1_row_exclusive_lock s4_wp_release s1_commit s1_show_data s1_show_chunks
step s2_set_lock_upgrade_conditional: 
    set timescaledb.merge_chunks_lock_upgrade_mode='conditional';

step s4_wp_enable: SELECT debug_waitpoint_enable('merge_chunks_before_heap_swap');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s2_show_chunks: select count(*) from show_chunks('readings');
count
-----
    2
(1 row)

step s1_begin: 
    start transaction isolation level repeatable read;
    select count(*) > 0 from pg_class;

?column?
--------
t       
(1 row)

step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s2_merge_chunks: 
    call merge_all_chunks('readings');
 <waiting ...>
step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s1_row_exclusive_lock: call lock_one_chunk('readings'); <waiting ...>
step s4_wp_release: SELECT debug_waitpoint_release('merge_chunks_before_heap_swap');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s2_merge_chunks: <... completed>
ERROR:  could not lock relation "_hyper_X_X_chunk" for merge
step s1_row_exclusive_lock: <... completed>
step s1_commit: commit;
step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s1_show_chunks: select count(*) from show_chunks('readings');
count
-----
    2
(1 row)


starting permutation: s4_wp_enable s2_merge_chunks s3_merge_chunks s4_wp_release s1_show_data s1_show_chunks
step s4_wp_enable: SELECT debug_waitpoint_enable('merge_chunks_before_heap_swap');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s2_merge_chunks: 
    call merge_all_chunks('readings');
 <waiting ...>
step s3_merge_chunks: 
    call merge_all_chunks('readings');
 <waiting ...>
step s4_wp_release: SELECT debug_waitpoint_release('merge_chunks_before_heap_swap');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s2_merge_chunks: <... completed>
step s3_merge_chunks: <... completed>
ERROR:  relation does not exist
step s1_show_data: 
    select * from readings order by time desc, device;
    select count(*) as num_device_all, count(*) filter (where device=1) as num_device_1, count(*) filter (where device=5) as num_device_5 from readings;

time                        |device|temp
----------------------------+------+----
Mon Jan 01 02:00:00 2024 PST|     3|   3
Mon Jan 01 02:00:00 2024 PST|     4|   4
Mon Jan 01 01:01:00 2024 PST|     2|   2
Mon Jan 01 01:00:00 2024 PST|     1|   1
(4 rows)

num_device_all|num_device_1|num_device_5
--------------+------------+------------
             4|           1|           0
(1 row)

step s1_show_chunks: select count(*) from show_chunks('readings');
count
-----
    1
(1 row)

