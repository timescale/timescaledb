Parsed test spec with 2 sessions

starting permutation: s1_drop s1_commit s2_compress_chunk_1 s2_compress_chunk_2 s2_commit
step s1_drop: 
	SELECT count (*)
	FROM drop_chunks('conditions', older_than => '2018-12-03 00:00'::timestamptz);

count
-----
    2

step s1_commit: COMMIT;
step s2_compress_chunk_1: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 ASC LIMIT 1) AS chunk;

ERROR:  chunk not found
step s2_compress_chunk_2: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 DESC LIMIT 1) AS chunk;

ERROR:  current transaction is aborted, commands ignored until end of transaction block
step s2_commit: COMMIT;

starting permutation: s1_drop s2_compress_chunk_1 s1_commit s2_compress_chunk_2 s2_commit
step s1_drop: 
	SELECT count (*)
	FROM drop_chunks('conditions', older_than => '2018-12-03 00:00'::timestamptz);

count
-----
    2

step s2_compress_chunk_1: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 ASC LIMIT 1) AS chunk;
 <waiting ...>
step s1_commit: COMMIT;
step s2_compress_chunk_1: <... completed>
ERROR:  chunk deleted by other transaction
step s2_compress_chunk_2: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 DESC LIMIT 1) AS chunk;

ERROR:  current transaction is aborted, commands ignored until end of transaction block
step s2_commit: COMMIT;

starting permutation: s1_drop s2_compress_chunk_1 s2_compress_chunk_2 s1_commit s2_commit
step s1_drop: 
	SELECT count (*)
	FROM drop_chunks('conditions', older_than => '2018-12-03 00:00'::timestamptz);

count
-----
    2

step s2_compress_chunk_1: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 ASC LIMIT 1) AS chunk;
 <waiting ...>
step s2_compress_chunk_1: <... completed>
ERROR:  canceling statement due to lock timeout
step s2_compress_chunk_2: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 DESC LIMIT 1) AS chunk;

ERROR:  current transaction is aborted, commands ignored until end of transaction block
step s1_commit: COMMIT;
step s2_commit: COMMIT;

starting permutation: s1_drop s2_compress_chunk_1 s2_compress_chunk_2 s2_commit s1_commit
step s1_drop: 
	SELECT count (*)
	FROM drop_chunks('conditions', older_than => '2018-12-03 00:00'::timestamptz);

count
-----
    2

step s2_compress_chunk_1: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 ASC LIMIT 1) AS chunk;
 <waiting ...>
step s2_compress_chunk_1: <... completed>
ERROR:  canceling statement due to lock timeout
step s2_compress_chunk_2: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 DESC LIMIT 1) AS chunk;

ERROR:  current transaction is aborted, commands ignored until end of transaction block
step s2_commit: COMMIT;
step s1_commit: COMMIT;

starting permutation: s2_compress_chunk_1 s1_drop s1_commit s2_compress_chunk_2 s2_commit
step s2_compress_chunk_1: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 ASC LIMIT 1) AS chunk;

count
-----
    1

step s1_drop: 
	SELECT count (*)
	FROM drop_chunks('conditions', older_than => '2018-12-03 00:00'::timestamptz);
 <waiting ...>
step s1_drop: <... completed>
ERROR:  some chunks could not be read since they are being concurrently updated
step s1_commit: COMMIT;
step s2_compress_chunk_2: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 DESC LIMIT 1) AS chunk;

count
-----
    1

step s2_commit: COMMIT;

starting permutation: s2_compress_chunk_1 s1_drop s2_compress_chunk_2 s1_commit s2_commit
step s2_compress_chunk_1: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 ASC LIMIT 1) AS chunk;

count
-----
    1

step s1_drop: 
	SELECT count (*)
	FROM drop_chunks('conditions', older_than => '2018-12-03 00:00'::timestamptz);
 <waiting ...>
step s2_compress_chunk_2: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 DESC LIMIT 1) AS chunk;

count
-----
    1

step s1_drop: <... completed>
ERROR:  some chunks could not be read since they are being concurrently updated
step s1_commit: COMMIT;
step s2_commit: COMMIT;

starting permutation: s2_compress_chunk_1 s1_drop s2_compress_chunk_2 s2_commit s1_commit
step s2_compress_chunk_1: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 ASC LIMIT 1) AS chunk;

count
-----
    1

step s1_drop: 
	SELECT count (*)
	FROM drop_chunks('conditions', older_than => '2018-12-03 00:00'::timestamptz);
 <waiting ...>
step s2_compress_chunk_2: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 DESC LIMIT 1) AS chunk;

count
-----
    1

step s2_commit: COMMIT;
step s1_drop: <... completed>
count
-----
    2

step s1_commit: COMMIT;

starting permutation: s2_compress_chunk_1 s2_compress_chunk_2 s1_drop s1_commit s2_commit
step s2_compress_chunk_1: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 ASC LIMIT 1) AS chunk;

count
-----
    1

step s2_compress_chunk_2: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 DESC LIMIT 1) AS chunk;

count
-----
    1

step s1_drop: 
	SELECT count (*)
	FROM drop_chunks('conditions', older_than => '2018-12-03 00:00'::timestamptz);
 <waiting ...>
step s1_drop: <... completed>
ERROR:  some chunks could not be read since they are being concurrently updated
step s1_commit: COMMIT;
step s2_commit: COMMIT;

starting permutation: s2_compress_chunk_1 s2_compress_chunk_2 s1_drop s2_commit s1_commit
step s2_compress_chunk_1: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 ASC LIMIT 1) AS chunk;

count
-----
    1

step s2_compress_chunk_2: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 DESC LIMIT 1) AS chunk;

count
-----
    1

step s1_drop: 
	SELECT count (*)
	FROM drop_chunks('conditions', older_than => '2018-12-03 00:00'::timestamptz);
 <waiting ...>
step s2_commit: COMMIT;
step s1_drop: <... completed>
count
-----
    2

step s1_commit: COMMIT;

starting permutation: s2_compress_chunk_1 s2_compress_chunk_2 s2_commit s1_drop s1_commit
step s2_compress_chunk_1: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 ASC LIMIT 1) AS chunk;

count
-----
    1

step s2_compress_chunk_2: 
	SELECT count(compress_chunk(chunk))
	FROM (SELECT chunk FROM chunks_to_compress ORDER BY 1 DESC LIMIT 1) AS chunk;

count
-----
    1

step s2_commit: COMMIT;
step s1_drop: 
	SELECT count (*)
	FROM drop_chunks('conditions', older_than => '2018-12-03 00:00'::timestamptz);

count
-----
    2

step s1_commit: COMMIT;
