Parsed test spec with 4 sessions

starting permutation: s3_wait_before_lock s1b s1_attach s4_insert s3_release_lock s1c s3_show_num_chunks
step s3_wait_before_lock: SELECT debug_waitpoint_enable('chunk_attach_before_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1b: BEGIN;
step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11'))); <waiting ...>
step s4_insert: INSERT INTO attach_test VALUES ('2025-06-03 00:15', 1, 31.5);
step s3_release_lock: SELECT debug_waitpoint_release('chunk_attach_before_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_attach: <... completed>
ERROR:  chunk creation failed due to collision
step s1c: COMMIT;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    1
(1 row)


starting permutation: s1b s1_attach s3_show_num_rows s4_insert s1c s3_show_num_chunks s3_show_num_rows
step s1b: BEGIN;
step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11')));
step s3_show_num_rows: SELECT count(*) FROM attach_test;
count
-----
    0
(1 row)

step s4_insert: INSERT INTO attach_test VALUES ('2025-06-03 00:15', 1, 31.5); <waiting ...>
step s1c: COMMIT;
step s4_insert: <... completed>
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    1
(1 row)

step s3_show_num_rows: SELECT count(*) FROM attach_test;
count
-----
    1
(1 row)


starting permutation: s3_wait_before_lock s1b s1_attach s3_show_chunk_rows s4_violate s3_release_lock s1c s3_show_num_chunks s3_show_chunk_rows
step s3_wait_before_lock: SELECT debug_waitpoint_enable('chunk_attach_before_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1b: BEGIN;
step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11'))); <waiting ...>
step s3_show_chunk_rows: SELECT count(*) FROM chunk_to_attach;
count
-----
    0
(1 row)

step s4_violate: INSERT INTO chunk_to_attach VALUES ('2025-08-01 20:00', 1, 34);
step s3_release_lock: SELECT debug_waitpoint_release('chunk_attach_before_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_attach: <... completed>
ERROR:  dimension constraint for column "time" violated by some row
step s1c: COMMIT;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    0
(1 row)

step s3_show_chunk_rows: SELECT count(*) FROM chunk_to_attach;
count
-----
    1
(1 row)


starting permutation: s1b s3_show_num_chunks s1_attach s4_violate s1c s3_show_num_chunks s3_show_chunk_rows
step s1b: BEGIN;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    0
(1 row)

step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11')));
step s4_violate: INSERT INTO chunk_to_attach VALUES ('2025-08-01 20:00', 1, 34); <waiting ...>
step s1c: COMMIT;
step s4_violate: <... completed>
ERROR:  new row for relation "chunk_to_attach" violates check constraint "constraint_X"
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    1
(1 row)

step s3_show_chunk_rows: SELECT count(*) FROM chunk_to_attach;
count
-----
    0
(1 row)


starting permutation: s3_wait_before_lock s1b s1_attach s4_drop s3_release_lock s1c
step s3_wait_before_lock: SELECT debug_waitpoint_enable('chunk_attach_before_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1b: BEGIN;
step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11'))); <waiting ...>
step s4_drop: DROP TABLE chunk_to_attach;
step s3_release_lock: SELECT debug_waitpoint_release('chunk_attach_before_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_attach: <... completed>
ERROR:  relation with OID X does not exist
step s1c: COMMIT;

starting permutation: s1b s3_show_num_chunks s1_attach s4_drop s1c s3_show_num_chunks s3_show_chunk_rows
step s1b: BEGIN;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    0
(1 row)

step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11')));
step s4_drop: DROP TABLE chunk_to_attach; <waiting ...>
step s1c: COMMIT;
step s4_drop: <... completed>
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    0
(1 row)

step s3_show_chunk_rows: SELECT count(*) FROM chunk_to_attach;
ERROR:  relation "chunk_to_attach" does not exist

starting permutation: s3_wait_before_lock s1b s1_attach s4_truncate s3_release_lock s1c s3_show_num_chunks
step s3_wait_before_lock: SELECT debug_waitpoint_enable('chunk_attach_before_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1b: BEGIN;
step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11'))); <waiting ...>
step s4_truncate: TRUNCATE TABLE attach_test;
step s3_release_lock: SELECT debug_waitpoint_release('chunk_attach_before_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_attach: <... completed>
step s1c: COMMIT;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    1
(1 row)


starting permutation: s1b s3_show_num_chunks s1_attach s4_truncate s1c s3_show_num_chunks s3_show_chunk_rows
step s1b: BEGIN;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    0
(1 row)

step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11')));
step s4_truncate: TRUNCATE TABLE attach_test; <waiting ...>
step s1c: COMMIT;
step s4_truncate: <... completed>
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    0
(1 row)

step s3_show_chunk_rows: SELECT count(*) FROM chunk_to_attach;
ERROR:  relation "chunk_to_attach" does not exist

starting permutation: s3_wait_before_lock s1b s1_attach s4_compress s3_release_lock s1c s3_show_num_chunks
step s3_wait_before_lock: SELECT debug_waitpoint_enable('chunk_attach_before_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1b: BEGIN;
step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11'))); <waiting ...>
step s4_compress: CALL convert_to_columnstore('chunk_to_attach');
ERROR:  chunk not found
step s3_release_lock: SELECT debug_waitpoint_release('chunk_attach_before_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_attach: <... completed>
step s1c: COMMIT;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    1
(1 row)


starting permutation: s1b s3_show_num_chunks s1_attach s4_compress s1c s3_show_num_chunks s3_show_chunk_rows
step s1b: BEGIN;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    0
(1 row)

step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11')));
step s4_compress: CALL convert_to_columnstore('chunk_to_attach');
ERROR:  chunk not found
step s1c: COMMIT;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    1
(1 row)

step s3_show_chunk_rows: SELECT count(*) FROM chunk_to_attach;
count
-----
    0
(1 row)


starting permutation: s2_attach s3_wait_before_lock s1b s1_attach s2_compress s3_release_lock s1c
step s2_attach: CALL attach_chunk('attach_test', 'temp_chunk', jsonb_build_object('time', jsonb_build_array('2025-05-01', '2025-05-11')));
step s3_wait_before_lock: SELECT debug_waitpoint_enable('chunk_attach_before_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1b: BEGIN;
step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11'))); <waiting ...>
step s2_compress: CALL convert_to_columnstore('temp_chunk');
step s3_release_lock: SELECT debug_waitpoint_release('chunk_attach_before_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_attach: <... completed>
step s1c: COMMIT;

starting permutation: s1b s2b s3_show_num_chunks s1_attach s2_attach s1c s2c s3_show_num_chunks
step s1b: BEGIN;
step s2b: BEGIN;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    0
(1 row)

step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11')));
step s2_attach: CALL attach_chunk('attach_test', 'temp_chunk', jsonb_build_object('time', jsonb_build_array('2025-05-01', '2025-05-11'))); <waiting ...>
step s1c: COMMIT;
step s2_attach: <... completed>
step s2c: COMMIT;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    2
(1 row)


starting permutation: s1b s2b s3_show_num_chunks s1_attach s2_attach_same s1c s2c s3_show_num_chunks
step s1b: BEGIN;
step s2b: BEGIN;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    0
(1 row)

step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11')));
step s2_attach_same: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11'))); <waiting ...>
step s1c: COMMIT;
step s2_attach_same: <... completed>
ERROR:  cannot attach chunk that is already a child of another table
step s2c: COMMIT;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    1
(1 row)


starting permutation: s3_wait_before_detach s1b s3_show_num_chunks s1_attach s4_detach s3_release_detach s1c s3_show_num_chunks
step s3_wait_before_detach: SELECT debug_waitpoint_enable('chunk_detach_before_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1b: BEGIN;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    0
(1 row)

step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11')));
step s4_detach: CALL detach_chunk('chunk_to_attach'); <waiting ...>
step s3_release_detach: SELECT debug_waitpoint_release('chunk_detach_before_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s4_detach: <... completed>
ERROR:  hypertable not found for the chunk
step s1c: COMMIT;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    1
(1 row)


starting permutation: s2_attach s3_wait_before_lock s1b s1_attach s2_detach s3_release_lock s1c s3_show_num_chunks
step s2_attach: CALL attach_chunk('attach_test', 'temp_chunk', jsonb_build_object('time', jsonb_build_array('2025-05-01', '2025-05-11')));
step s3_wait_before_lock: SELECT debug_waitpoint_enable('chunk_attach_before_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1b: BEGIN;
step s1_attach: CALL attach_chunk('attach_test', 'chunk_to_attach', jsonb_build_object('time', jsonb_build_array('2025-06-01', '2025-06-11'))); <waiting ...>
step s2_detach: CALL detach_chunk('temp_chunk');
step s3_release_lock: SELECT debug_waitpoint_release('chunk_attach_before_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_attach: <... completed>
step s1c: COMMIT;
step s3_show_num_chunks: SELECT count(*) FROM show_chunks('attach_test');
count
-----
    1
(1 row)

