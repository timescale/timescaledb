-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
\set ECHO ALL
CREATE VIEW settings AS SELECT * FROM _timescaledb_catalog.compression_settings ORDER BY upper(relid::text) COLLATE "C";
CREATE VIEW ht_settings AS SELECT * FROM timescaledb_information.hypertable_compression_settings ORDER BY upper(hypertable::text) COLLATE "C";
CREATE VIEW chunk_settings AS SELECT * FROM timescaledb_information.chunk_compression_settings ORDER BY upper(hypertable::text) COLLATE "C", upper(chunk::text) COLLATE "C";
CREATE TABLE metrics(time timestamptz not null, device text, value float);
SELECT table_name FROM create_hypertable('metrics','time');
 table_name 
------------
 metrics
(1 row)

ALTER TABLE metrics SET (timescaledb.compress, timescaledb.compress_segmentby='device');
SELECT * FROM settings;
  relid  | compress_relid | segmentby | orderby | orderby_desc | orderby_nullsfirst | index 
---------+----------------+-----------+---------+--------------+--------------------+-------
 metrics |                | {device}  |         |              |                    | 
(1 row)

SELECT * FROM ht_settings;
 hypertable | segmentby | orderby | compress_interval_length | index 
------------+-----------+---------+--------------------------+-------
 metrics    | device    |         |                          | 
(1 row)

SELECT * FROM chunk_settings;
 hypertable | chunk | segmentby | orderby | index 
------------+-------+-----------+---------+-------
(0 rows)

-- create 2 chunks
INSERT INTO metrics VALUES ('2000-01-01'), ('2001-01-01');
-- no change to settings
SELECT * FROM settings;
  relid  | compress_relid | segmentby | orderby | orderby_desc | orderby_nullsfirst | index 
---------+----------------+-----------+---------+--------------+--------------------+-------
 metrics |                | {device}  |         |              |                    | 
(1 row)

--Enable compression path info
SET timescaledb.debug_compression_path_info= 'on';
SELECT compress_chunk('_timescaledb_internal._hyper_1_1_chunk');
INFO:  using tuplesort to scan rows from "_hyper_1_1_chunk" for converting to columnstore
             compress_chunk             
----------------------------------------
 _timescaledb_internal._hyper_1_1_chunk
(1 row)

RESET timescaledb.debug_compression_path_info;
SELECT * FROM settings;
                 relid                  |                 compress_relid                 | segmentby | orderby | orderby_desc | orderby_nullsfirst |                            index                            
----------------------------------------+------------------------------------------------+-----------+---------+--------------+--------------------+-------------------------------------------------------------
 metrics                                |                                                | {device}  |         |              |                    | 
 _timescaledb_internal._hyper_1_1_chunk | _timescaledb_internal.compress_hyper_2_3_chunk | {device}  | {time}  | {t}          | {t}                | [{"type": "minmax", "column": "time", "source": "orderby"}]
(2 rows)

SELECT * FROM chunk_settings;
 hypertable |                 chunk                  | segmentby |   orderby   |                            index                            
------------+----------------------------------------+-----------+-------------+-------------------------------------------------------------
 metrics    | _timescaledb_internal._hyper_1_1_chunk | device    | "time" DESC | [{"type": "minmax", "column": "time", "source": "orderby"}]
(1 row)

SELECT compress_chunk('_timescaledb_internal._hyper_1_2_chunk');
             compress_chunk             
----------------------------------------
 _timescaledb_internal._hyper_1_2_chunk
(1 row)

SELECT * FROM settings;
                 relid                  |                 compress_relid                 | segmentby | orderby | orderby_desc | orderby_nullsfirst |                            index                            
----------------------------------------+------------------------------------------------+-----------+---------+--------------+--------------------+-------------------------------------------------------------
 metrics                                |                                                | {device}  |         |              |                    | 
 _timescaledb_internal._hyper_1_1_chunk | _timescaledb_internal.compress_hyper_2_3_chunk | {device}  | {time}  | {t}          | {t}                | [{"type": "minmax", "column": "time", "source": "orderby"}]
 _timescaledb_internal._hyper_1_2_chunk | _timescaledb_internal.compress_hyper_2_4_chunk | {device}  | {time}  | {t}          | {t}                | [{"type": "minmax", "column": "time", "source": "orderby"}]
(3 rows)

SELECT * FROM chunk_settings;
 hypertable |                 chunk                  | segmentby |   orderby   |                            index                            
------------+----------------------------------------+-----------+-------------+-------------------------------------------------------------
 metrics    | _timescaledb_internal._hyper_1_1_chunk | device    | "time" DESC | [{"type": "minmax", "column": "time", "source": "orderby"}]
 metrics    | _timescaledb_internal._hyper_1_2_chunk | device    | "time" DESC | [{"type": "minmax", "column": "time", "source": "orderby"}]
(2 rows)

-- dropping chunk should remove that chunks compression settings
DROP TABLE _timescaledb_internal._hyper_1_1_chunk;
SELECT * FROM settings;
                 relid                  |                 compress_relid                 | segmentby | orderby | orderby_desc | orderby_nullsfirst |                            index                            
----------------------------------------+------------------------------------------------+-----------+---------+--------------+--------------------+-------------------------------------------------------------
 metrics                                |                                                | {device}  |         |              |                    | 
 _timescaledb_internal._hyper_1_2_chunk | _timescaledb_internal.compress_hyper_2_4_chunk | {device}  | {time}  | {t}          | {t}                | [{"type": "minmax", "column": "time", "source": "orderby"}]
(2 rows)

SELECT * FROM chunk_settings;
 hypertable |                 chunk                  | segmentby |   orderby   |                            index                            
------------+----------------------------------------+-----------+-------------+-------------------------------------------------------------
 metrics    | _timescaledb_internal._hyper_1_2_chunk | device    | "time" DESC | [{"type": "minmax", "column": "time", "source": "orderby"}]
(1 row)

-- decompress_chunk should remove settings for that chunk
SELECT decompress_chunk('_timescaledb_internal._hyper_1_2_chunk');
            decompress_chunk            
----------------------------------------
 _timescaledb_internal._hyper_1_2_chunk
(1 row)

SELECT * FROM settings;
  relid  | compress_relid | segmentby | orderby | orderby_desc | orderby_nullsfirst | index 
---------+----------------+-----------+---------+--------------+--------------------+-------
 metrics |                | {device}  |         |              |                    | 
(1 row)

SELECT * FROM chunk_settings;
 hypertable | chunk | segmentby | orderby | index 
------------+-------+-----------+---------+-------
(0 rows)

-- compress_chunk should add settings back
SELECT compress_chunk('_timescaledb_internal._hyper_1_2_chunk');
             compress_chunk             
----------------------------------------
 _timescaledb_internal._hyper_1_2_chunk
(1 row)

SELECT * FROM settings;
                 relid                  |                 compress_relid                 | segmentby | orderby | orderby_desc | orderby_nullsfirst |                            index                            
----------------------------------------+------------------------------------------------+-----------+---------+--------------+--------------------+-------------------------------------------------------------
 metrics                                |                                                | {device}  |         |              |                    | 
 _timescaledb_internal._hyper_1_2_chunk | _timescaledb_internal.compress_hyper_2_5_chunk | {device}  | {time}  | {t}          | {t}                | [{"type": "minmax", "column": "time", "source": "orderby"}]
(2 rows)

SELECT * FROM chunk_settings;
 hypertable |                 chunk                  | segmentby |   orderby   |                            index                            
------------+----------------------------------------+-----------+-------------+-------------------------------------------------------------
 metrics    | _timescaledb_internal._hyper_1_2_chunk | device    | "time" DESC | [{"type": "minmax", "column": "time", "source": "orderby"}]
(1 row)

-- dropping hypertable should remove all settings
DROP TABLE metrics;
SELECT * FROM settings;
 relid | compress_relid | segmentby | orderby | orderby_desc | orderby_nullsfirst | index 
-------+----------------+-----------+---------+--------------+--------------------+-------
(0 rows)

SELECT * FROM ht_settings;
 hypertable | segmentby | orderby | compress_interval_length | index 
------------+-----------+---------+--------------------------+-------
(0 rows)

SELECT * FROM chunk_settings;
 hypertable | chunk | segmentby | orderby | index 
------------+-------+-----------+---------+-------
(0 rows)

CREATE TABLE metrics(time timestamptz not null, d1 text, d2 text, value float);
SELECT table_name FROM create_hypertable('metrics','time');
 table_name 
------------
 metrics
(1 row)

ALTER TABLE metrics SET (timescaledb.compress);
-- hypertable should have default settings now
SELECT * FROM settings;
  relid  | compress_relid | segmentby | orderby | orderby_desc | orderby_nullsfirst | index 
---------+----------------+-----------+---------+--------------+--------------------+-------
 metrics |                |           |         |              |                    | 
(1 row)

SELECT * FROM ht_settings;
 hypertable | segmentby | orderby | compress_interval_length | index 
------------+-----------+---------+--------------------------+-------
 metrics    |           |         |                          | 
(1 row)

-- create chunk
INSERT INTO metrics VALUES ('2000-01-01');
ALTER TABLE metrics SET (timescaledb.compress_segmentby='d1');
-- settings should be updated
SELECT * FROM settings;
  relid  | compress_relid | segmentby | orderby | orderby_desc | orderby_nullsfirst | index 
---------+----------------+-----------+---------+--------------+--------------------+-------
 metrics |                | {d1}      |         |              |                    | 
(1 row)

SELECT * FROM ht_settings;
 hypertable | segmentby | orderby | compress_interval_length | index 
------------+-----------+---------+--------------------------+-------
 metrics    | d1        |         |                          | 
(1 row)

SELECT compress_chunk(show_chunks('metrics'));
             compress_chunk             
----------------------------------------
 _timescaledb_internal._hyper_3_6_chunk
(1 row)

-- settings for compressed chunk should be present
SELECT * FROM settings;
                 relid                  |                 compress_relid                 | segmentby | orderby | orderby_desc | orderby_nullsfirst |                            index                            
----------------------------------------+------------------------------------------------+-----------+---------+--------------+--------------------+-------------------------------------------------------------
 metrics                                |                                                | {d1}      |         |              |                    | 
 _timescaledb_internal._hyper_3_6_chunk | _timescaledb_internal.compress_hyper_4_7_chunk | {d1}      | {time}  | {t}          | {t}                | [{"type": "minmax", "column": "time", "source": "orderby"}]
(2 rows)

SELECT * FROM chunk_settings;
 hypertable |                 chunk                  | segmentby |   orderby   |                            index                            
------------+----------------------------------------+-----------+-------------+-------------------------------------------------------------
 metrics    | _timescaledb_internal._hyper_3_6_chunk | d1        | "time" DESC | [{"type": "minmax", "column": "time", "source": "orderby"}]
(1 row)

-- changing settings should update settings for hypertable but not existing compressed chunks
ALTER TABLE metrics SET (timescaledb.compress_segmentby='d2');
SELECT * FROM settings;
                 relid                  |                 compress_relid                 | segmentby | orderby | orderby_desc | orderby_nullsfirst |                            index                            
----------------------------------------+------------------------------------------------+-----------+---------+--------------+--------------------+-------------------------------------------------------------
 metrics                                |                                                | {d2}      |         |              |                    | 
 _timescaledb_internal._hyper_3_6_chunk | _timescaledb_internal.compress_hyper_4_7_chunk | {d1}      | {time}  | {t}          | {t}                | [{"type": "minmax", "column": "time", "source": "orderby"}]
(2 rows)

SELECT * FROM ht_settings;
 hypertable | segmentby | orderby | compress_interval_length | index 
------------+-----------+---------+--------------------------+-------
 metrics    | d2        |         |                          | 
(1 row)

SELECT * FROM chunk_settings;
 hypertable |                 chunk                  | segmentby |   orderby   |                            index                            
------------+----------------------------------------+-----------+-------------+-------------------------------------------------------------
 metrics    | _timescaledb_internal._hyper_3_6_chunk | d1        | "time" DESC | [{"type": "minmax", "column": "time", "source": "orderby"}]
(1 row)

-- changing settings should update settings for hypertable but not existing compressed chunks
ALTER TABLE metrics SET (timescaledb.compress_segmentby='');
SELECT * FROM settings;
                 relid                  |                 compress_relid                 | segmentby | orderby | orderby_desc | orderby_nullsfirst |                            index                            
----------------------------------------+------------------------------------------------+-----------+---------+--------------+--------------------+-------------------------------------------------------------
 metrics                                |                                                | {}        |         |              |                    | 
 _timescaledb_internal._hyper_3_6_chunk | _timescaledb_internal.compress_hyper_4_7_chunk | {d1}      | {time}  | {t}          | {t}                | [{"type": "minmax", "column": "time", "source": "orderby"}]
(2 rows)

SELECT * FROM ht_settings;
 hypertable | segmentby | orderby | compress_interval_length | index 
------------+-----------+---------+--------------------------+-------
 metrics    |           |         |                          | 
(1 row)

SELECT * FROM chunk_settings;
 hypertable |                 chunk                  | segmentby |   orderby   |                            index                            
------------+----------------------------------------+-----------+-------------+-------------------------------------------------------------
 metrics    | _timescaledb_internal._hyper_3_6_chunk | d1        | "time" DESC | [{"type": "minmax", "column": "time", "source": "orderby"}]
(1 row)

-- create another chunk
INSERT INTO metrics VALUES ('2000-02-01');
SELECT compress_chunk(show_chunks('metrics'), true);
NOTICE:  chunk "_hyper_3_6_chunk" is already converted to columnstore
             compress_chunk             
----------------------------------------
 _timescaledb_internal._hyper_3_6_chunk
 _timescaledb_internal._hyper_3_8_chunk
(2 rows)

SELECT * FROM settings;
                 relid                  |                 compress_relid                 | segmentby | orderby | orderby_desc | orderby_nullsfirst |                            index                            
----------------------------------------+------------------------------------------------+-----------+---------+--------------+--------------------+-------------------------------------------------------------
 metrics                                |                                                | {}        |         |              |                    | 
 _timescaledb_internal._hyper_3_6_chunk | _timescaledb_internal.compress_hyper_4_7_chunk | {d1}      | {time}  | {t}          | {t}                | [{"type": "minmax", "column": "time", "source": "orderby"}]
 _timescaledb_internal._hyper_3_8_chunk | _timescaledb_internal.compress_hyper_4_9_chunk | {}        | {time}  | {t}          | {t}                | [{"type": "minmax", "column": "time", "source": "orderby"}]
(3 rows)

SELECT * FROM ht_settings;
 hypertable | segmentby | orderby | compress_interval_length | index 
------------+-----------+---------+--------------------------+-------
 metrics    |           |         |                          | 
(1 row)

SELECT * FROM chunk_settings;
 hypertable |                 chunk                  | segmentby |   orderby   |                            index                            
------------+----------------------------------------+-----------+-------------+-------------------------------------------------------------
 metrics    | _timescaledb_internal._hyper_3_6_chunk | d1        | "time" DESC | [{"type": "minmax", "column": "time", "source": "orderby"}]
 metrics    | _timescaledb_internal._hyper_3_8_chunk |           | "time" DESC | [{"type": "minmax", "column": "time", "source": "orderby"}]
(2 rows)

ALTER TABLE metrics SET (timescaledb.compress_orderby='"time" desc', timescaledb.compress_segmentby='d2', timescaledb.index='bloom(value)');
SELECT format('%I.%I', schema_name, table_name) AS "CHUNK" FROM _timescaledb_catalog.chunk WHERE compressed_chunk_id IS NOT NULL ORDER BY id LIMIT 1 OFFSET 1\gset
-- recompressing chunks should apply current hypertable settings
SELECT compress_chunk(:'CHUNK', recompress:=true);
             compress_chunk             
----------------------------------------
 _timescaledb_internal._hyper_3_8_chunk
(1 row)

SELECT compress_chunk(:'CHUNK', recompress:=true);
NOTICE:  chunk "_hyper_3_8_chunk" is already converted to columnstore
             compress_chunk             
----------------------------------------
 _timescaledb_internal._hyper_3_8_chunk
(1 row)

ALTER TABLE metrics SET (timescaledb.compress_orderby='"time" desc', timescaledb.compress_segmentby='d2', timescaledb.index='');
SELECT format('%I.%I', schema_name, table_name) AS "CHUNK" FROM _timescaledb_catalog.chunk WHERE compressed_chunk_id IS NOT NULL ORDER BY id LIMIT 1 OFFSET 1\gset
SELECT compress_chunk(:'CHUNK', recompress:=true);
             compress_chunk             
----------------------------------------
 _timescaledb_internal._hyper_3_8_chunk
(1 row)

SELECT * FROM settings;
                 relid                  |                 compress_relid                  | segmentby | orderby | orderby_desc | orderby_nullsfirst |                                       index                                       
----------------------------------------+-------------------------------------------------+-----------+---------+--------------+--------------------+-----------------------------------------------------------------------------------
 metrics                                |                                                 | {d2}      | {time}  | {t}          | {t}                | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
 _timescaledb_internal._hyper_3_6_chunk | _timescaledb_internal.compress_hyper_4_7_chunk  | {d1}      | {time}  | {t}          | {t}                | [{"type": "minmax", "column": "time", "source": "orderby"}]
 _timescaledb_internal._hyper_3_8_chunk | _timescaledb_internal.compress_hyper_4_11_chunk | {d2}      | {time}  | {t}          | {t}                | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
(3 rows)

SELECT * FROM ht_settings;
 hypertable | segmentby |   orderby   | compress_interval_length |                                       index                                       
------------+-----------+-------------+--------------------------+-----------------------------------------------------------------------------------
 metrics    | d2        | "time" DESC |                          | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
(1 row)

SELECT * FROM chunk_settings;
 hypertable |                 chunk                  | segmentby |   orderby   |                                       index                                       
------------+----------------------------------------+-----------+-------------+-----------------------------------------------------------------------------------
 metrics    | _timescaledb_internal._hyper_3_6_chunk | d1        | "time" DESC | [{"type": "minmax", "column": "time", "source": "orderby"}]
 metrics    | _timescaledb_internal._hyper_3_8_chunk | d2        | "time" DESC | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
(2 rows)

-- test different order by flags with compression settings view
CREATE TABLE metrics2(time timestamptz not null, d1 text, d2 text, value float);
SELECT create_hypertable('metrics2','time');
   create_hypertable   
-----------------------
 (5,public,metrics2,t)
(1 row)

SELECT * FROM ht_settings;
 hypertable | segmentby |   orderby   | compress_interval_length |                                       index                                       
------------+-----------+-------------+--------------------------+-----------------------------------------------------------------------------------
 metrics    | d2        | "time" DESC |                          | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
 metrics2   |           |             |                          | 
(2 rows)

ALTER TABLE metrics2 SET (timescaledb.compress_orderby='d1 NULLS FIRST, d2 NULLS LAST, time, value ASC');
SELECT * FROM ht_settings;
 hypertable | segmentby |            orderby             | compress_interval_length |                                                                                                                   index                                                                                                                   
------------+-----------+--------------------------------+--------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 metrics    | d2        | "time" DESC                    |                          | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
 metrics2   |           | d1 NULLS FIRST,d2,"time",value |                          | [{"type": "minmax", "column": "d1", "source": "orderby"}, {"type": "minmax", "column": "d2", "source": "orderby"}, {"type": "minmax", "column": "time", "source": "orderby"}, {"type": "minmax", "column": "value", "source": "orderby"}]
(2 rows)

ALTER TABLE metrics2 SET (timescaledb.compress_orderby='d1 DESC NULLS LAST, d2 ASC NULLS FIRST, value DESC, time ASC NULLS FIRST');
SELECT * FROM ht_settings;
 hypertable | segmentby |                             orderby                             | compress_interval_length |                                                                                                                   index                                                                                                                   
------------+-----------+-----------------------------------------------------------------+--------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 metrics    | d2        | "time" DESC                                                     |                          | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
 metrics2   |           | d1 DESC NULLS LAST,d2 NULLS FIRST,value DESC,"time" NULLS FIRST |                          | [{"type": "minmax", "column": "d1", "source": "orderby"}, {"type": "minmax", "column": "d2", "source": "orderby"}, {"type": "minmax", "column": "value", "source": "orderby"}, {"type": "minmax", "column": "time", "source": "orderby"}]
(2 rows)

-- test decompression uses the correct settings
ALTER TABLE metrics SET (timescaledb.compress_segmentby='');
SELECT compress_chunk(show_chunks('metrics'), recompress:=true);
             compress_chunk             
----------------------------------------
 _timescaledb_internal._hyper_3_6_chunk
 _timescaledb_internal._hyper_3_8_chunk
(2 rows)

ALTER TABLE metrics SET (timescaledb.compress_segmentby='d1,d2');
SELECT * FROM chunk_settings;
 hypertable |                 chunk                  | segmentby |   orderby   |                                       index                                       
------------+----------------------------------------+-----------+-------------+-----------------------------------------------------------------------------------
 metrics    | _timescaledb_internal._hyper_3_6_chunk |           | "time" DESC | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
 metrics    | _timescaledb_internal._hyper_3_8_chunk |           | "time" DESC | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
(2 rows)

SELECT * FROM metrics WHERE d1 = 'foo';
 time | d1 | d2 | value 
------+----+----+-------
(0 rows)

SELECT * FROM settings;
                 relid                  |                 compress_relid                  | segmentby |      orderby       | orderby_desc | orderby_nullsfirst |                                                                                                                   index                                                                                                                   
----------------------------------------+-------------------------------------------------+-----------+--------------------+--------------+--------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 metrics                                |                                                 | {d1,d2}   | {time}             | {t}          | {t}                | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
 metrics2                               |                                                 |           | {d1,d2,value,time} | {t,f,t,f}    | {f,t,t,t}          | [{"type": "minmax", "column": "d1", "source": "orderby"}, {"type": "minmax", "column": "d2", "source": "orderby"}, {"type": "minmax", "column": "value", "source": "orderby"}, {"type": "minmax", "column": "time", "source": "orderby"}]
 _timescaledb_internal._hyper_3_6_chunk | _timescaledb_internal.compress_hyper_4_12_chunk | {}        | {time}             | {t}          | {t}                | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
 _timescaledb_internal._hyper_3_8_chunk | _timescaledb_internal.compress_hyper_4_13_chunk | {}        | {time}             | {t}          | {t}                | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
(4 rows)

-- Check that TRUNCATE <hypertable> also cleans up compression
-- settings for chunks that are dropped when truncating.
TRUNCATE metrics;
SELECT * FROM settings;
  relid   | compress_relid | segmentby |      orderby       | orderby_desc | orderby_nullsfirst |                                                                                                                   index                                                                                                                   
----------+----------------+-----------+--------------------+--------------+--------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 metrics  |                | {d1,d2}   | {time}             | {t}          | {t}                | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
 metrics2 |                |           | {d1,d2,value,time} | {t,f,t,f}    | {f,t,t,t}          | [{"type": "minmax", "column": "d1", "source": "orderby"}, {"type": "minmax", "column": "d2", "source": "orderby"}, {"type": "minmax", "column": "value", "source": "orderby"}, {"type": "minmax", "column": "time", "source": "orderby"}]
(2 rows)

SELECT * FROM chunk_settings;
 hypertable | chunk | segmentby | orderby | index 
------------+-------+-----------+---------+-------
(0 rows)

-- Recreate chunks
INSERT INTO metrics VALUES ('2000-01-01'), ('2001-01-01');
SELECT compress_chunk(ch) FROM show_chunks('metrics') ch;
             compress_chunk              
-----------------------------------------
 _timescaledb_internal._hyper_3_14_chunk
 _timescaledb_internal._hyper_3_15_chunk
(2 rows)

SELECT * FROM settings;
                  relid                  |                 compress_relid                  | segmentby |      orderby       | orderby_desc | orderby_nullsfirst |                                                                                                                   index                                                                                                                   
-----------------------------------------+-------------------------------------------------+-----------+--------------------+--------------+--------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 metrics                                 |                                                 | {d1,d2}   | {time}             | {t}          | {t}                | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
 metrics2                                |                                                 |           | {d1,d2,value,time} | {t,f,t,f}    | {f,t,t,t}          | [{"type": "minmax", "column": "d1", "source": "orderby"}, {"type": "minmax", "column": "d2", "source": "orderby"}, {"type": "minmax", "column": "value", "source": "orderby"}, {"type": "minmax", "column": "time", "source": "orderby"}]
 _timescaledb_internal._hyper_3_14_chunk | _timescaledb_internal.compress_hyper_4_16_chunk | {d1,d2}   | {time}             | {t}          | {t}                | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
 _timescaledb_internal._hyper_3_15_chunk | _timescaledb_internal.compress_hyper_4_17_chunk | {d1,d2}   | {time}             | {t}          | {t}                | [{"source": "config"}, {"type": "minmax", "column": "time", "source": "orderby"}]
(4 rows)

-- DROP TABLE with CASCADE uses a different code path for dropping
-- hypertable so needs to be tested separately.
DROP TABLE metrics CASCADE;
SELECT * FROM settings;
  relid   | compress_relid | segmentby |      orderby       | orderby_desc | orderby_nullsfirst |                                                                                                                   index                                                                                                                   
----------+----------------+-----------+--------------------+--------------+--------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 metrics2 |                |           | {d1,d2,value,time} | {t,f,t,f}    | {f,t,t,t}          | [{"type": "minmax", "column": "d1", "source": "orderby"}, {"type": "minmax", "column": "d2", "source": "orderby"}, {"type": "minmax", "column": "value", "source": "orderby"}, {"type": "minmax", "column": "time", "source": "orderby"}]
(1 row)

