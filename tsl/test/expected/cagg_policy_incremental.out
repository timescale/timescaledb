-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
\c :TEST_DBNAME :ROLE_SUPERUSER
CREATE OR REPLACE FUNCTION ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(timeout INT = -1, mock_start_time INT = 0) RETURNS VOID
AS :MODULE_PATHNAME LANGUAGE C VOLATILE;
CREATE OR REPLACE FUNCTION ts_bgw_params_create() RETURNS VOID
AS :MODULE_PATHNAME LANGUAGE C VOLATILE;
CREATE OR REPLACE FUNCTION ts_bgw_params_destroy() RETURNS VOID
AS :MODULE_PATHNAME LANGUAGE C VOLATILE;
CREATE OR REPLACE FUNCTION ts_bgw_params_reset_time(set_time BIGINT = 0, wait BOOLEAN = false) RETURNS VOID
AS :MODULE_PATHNAME LANGUAGE C VOLATILE;
-- Create a user with specific timezone and mock time
CREATE ROLE test_cagg_refresh_policy_user WITH LOGIN;
ALTER ROLE test_cagg_refresh_policy_user SET timezone TO 'UTC';
ALTER ROLE test_cagg_refresh_policy_user SET timescaledb.current_timestamp_mock TO '2025-03-11 00:00:00+00';
GRANT ALL ON SCHEMA public TO test_cagg_refresh_policy_user;
\c :TEST_DBNAME test_cagg_refresh_policy_user
CREATE TABLE public.bgw_log(
    msg_no INT,
    mock_time BIGINT,
    application_name TEXT,
    msg TEXT
);
CREATE VIEW sorted_bgw_log AS
SELECT
    msg_no,
    mock_time,
    application_name,
    regexp_replace(regexp_replace(msg, '(Wait until|started at|execution time) [0-9]+(\.[0-9]+)?', '\1 (RANDOM)', 'g'), 'background worker "[^"]+"','connection') AS msg
FROM
    bgw_log
ORDER BY
    mock_time,
    application_name COLLATE "C",
    msg_no;
CREATE TABLE public.bgw_dsm_handle_store(
    handle BIGINT
);
INSERT INTO public.bgw_dsm_handle_store VALUES (0);
SELECT ts_bgw_params_create();
 ts_bgw_params_create 
----------------------
 

CREATE TABLE conditions (
    time         TIMESTAMP WITH TIME ZONE NOT NULL,
    device_id    INTEGER,
    temperature  NUMERIC
);
SELECT FROM create_hypertable('conditions', by_range('time'));
--

INSERT INTO conditions
SELECT
    t, d, 10
FROM
    generate_series(
        '2025-02-05 00:00:00+00',
        '2025-03-05 00:00:00+00',
        '1 hour'::interval) AS t,
    generate_series(1,5) AS d;
CREATE MATERIALIZED VIEW conditions_by_day
WITH (timescaledb.continuous, timescaledb.materialized_only=true) AS
SELECT
    time_bucket('1 day', time),
    device_id,
    count(*),
    min(temperature),
    max(temperature),
    avg(temperature),
    sum(temperature)
FROM
    conditions
GROUP BY
    1, 2
WITH NO DATA;
SELECT
    add_continuous_aggregate_policy(
        'conditions_by_day',
        start_offset => NULL,
        end_offset => NULL,
        schedule_interval => INTERVAL '1 h',
        buckets_per_batch => 10
    ) AS job_id \gset
SELECT
    config
FROM
    timescaledb_information.jobs
WHERE
    job_id = :'job_id' \gset
SELECT ts_bgw_params_reset_time(0, true);
 ts_bgw_params_reset_time 
--------------------------
 

SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 

SELECT * FROM sorted_bgw_log;
 msg_no | mock_time |              application_name              |                                                                                   msg                                                                                    
--------+-----------+--------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      0 |         0 | DB Scheduler                               | [TESTING] Registered new background worker
      1 |         0 | DB Scheduler                               | [TESTING] Registered new background worker
      2 |         0 | DB Scheduler                               | [TESTING] Wait until (RANDOM), started at (RANDOM)
      0 |         0 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Sat Mar 01 00:00:00 2025 UTC, Thu Mar 06 00:00:00 2025 UTC ] (batch 1 of 4)
      1 |         0 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      2 |         0 | Refresh Continuous Aggregate Policy [1000] | inserted 25 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      3 |         0 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Wed Feb 19 00:00:00 2025 UTC, Sat Mar 01 00:00:00 2025 UTC ] (batch 2 of 4)
      4 |         0 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      5 |         0 | Refresh Continuous Aggregate Policy [1000] | inserted 50 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      6 |         0 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Sun Feb 09 00:00:00 2025 UTC, Wed Feb 19 00:00:00 2025 UTC ] (batch 3 of 4)
      7 |         0 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      8 |         0 | Refresh Continuous Aggregate Policy [1000] | inserted 50 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      9 |         0 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Mon Nov 24 00:00:00 4714 UTC BC, Sun Feb 09 00:00:00 2025 UTC ] (batch 4 of 4)
     10 |         0 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
     11 |         0 | Refresh Continuous Aggregate Policy [1000] | inserted 20 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"

CREATE MATERIALIZED VIEW conditions_by_day_manual_refresh
WITH (timescaledb.continuous, timescaledb.materialized_only=true) AS
SELECT
    time_bucket('1 day', time),
    device_id,
    count(*),
    min(temperature),
    max(temperature),
    avg(temperature),
    sum(temperature)
FROM
    conditions
GROUP BY
    1, 2
WITH NO DATA;
CALL refresh_continuous_aggregate('conditions_by_day_manual_refresh', NULL, NULL);
SELECT count(*) FROM conditions_by_day;
 count 
-------
   145

SELECT count(*) FROM conditions_by_day_manual_refresh;
 count 
-------
   145

-- Should have no differences
SELECT
    count(*) > 0 AS has_diff
FROM
    ((SELECT * FROM conditions_by_day_manual_refresh ORDER BY 1, 2)
    EXCEPT
    (SELECT * FROM conditions_by_day ORDER BY 1, 2)) AS diff;
 has_diff 
----------
 f

TRUNCATE bgw_log, conditions_by_day;
SELECT
    config
FROM
    alter_job(
        :'job_id',
        config => jsonb_set(:'config', '{max_batches_per_execution}', '2')
    );
                                                           config                                                            
-----------------------------------------------------------------------------------------------------------------------------
 {"end_offset": null, "start_offset": null, "buckets_per_batch": 10, "mat_hypertable_id": 2, "max_batches_per_execution": 2}

-- advance time by 1h so that job runs one more time
SELECT ts_bgw_params_reset_time(extract(epoch from interval '1 hour')::bigint * 1000000, true);
 ts_bgw_params_reset_time 
--------------------------
 

SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 

SELECT * FROM sorted_bgw_log;
 msg_no | mock_time  |              application_name              |                                                                                  msg                                                                                  
--------+------------+--------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
      0 | 3600000000 | DB Scheduler                               | [TESTING] Registered new background worker
      1 | 3600000000 | DB Scheduler                               | [TESTING] Wait until (RANDOM), started at (RANDOM)
      0 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Sat Mar 01 00:00:00 2025 UTC, Thu Mar 06 00:00:00 2025 UTC ] (batch 1 of 4)
      1 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      2 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | inserted 25 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      3 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Wed Feb 19 00:00:00 2025 UTC, Sat Mar 01 00:00:00 2025 UTC ] (batch 2 of 4)
      4 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      5 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | inserted 50 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      6 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | reached maximum number of batches per execution (2), batches not processed (2)

SELECT count(*) FROM conditions_by_day;
 count 
-------
    75

SELECT count(*) FROM conditions_by_day_manual_refresh;
 count 
-------
   145

-- Should have differences
SELECT
    count(*) > 0 AS has_diff
FROM
    ((SELECT * FROM conditions_by_day_manual_refresh ORDER BY 1, 2)
    EXCEPT
    (SELECT * FROM conditions_by_day ORDER BY 1, 2)) AS diff;
 has_diff 
----------
 t

-- advance time by 2h so that job runs one more time
SELECT ts_bgw_params_reset_time(extract(epoch from interval '2 hour')::bigint * 1000000, true);
 ts_bgw_params_reset_time 
--------------------------
 

SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 

SELECT * FROM sorted_bgw_log;
 msg_no | mock_time  |              application_name              |                                                                                   msg                                                                                    
--------+------------+--------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      0 | 3600000000 | DB Scheduler                               | [TESTING] Registered new background worker
      1 | 3600000000 | DB Scheduler                               | [TESTING] Wait until (RANDOM), started at (RANDOM)
      0 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Sat Mar 01 00:00:00 2025 UTC, Thu Mar 06 00:00:00 2025 UTC ] (batch 1 of 4)
      1 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      2 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | inserted 25 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      3 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Wed Feb 19 00:00:00 2025 UTC, Sat Mar 01 00:00:00 2025 UTC ] (batch 2 of 4)
      4 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      5 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | inserted 50 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      6 | 3600000000 | Refresh Continuous Aggregate Policy [1000] | reached maximum number of batches per execution (2), batches not processed (2)
      0 | 7200000000 | DB Scheduler                               | [TESTING] Registered new background worker
      1 | 7200000000 | DB Scheduler                               | [TESTING] Wait until (RANDOM), started at (RANDOM)
      0 | 7200000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Sun Feb 09 00:00:00 2025 UTC, Wed Feb 19 00:00:00 2025 UTC ] (batch 1 of 2)
      1 | 7200000000 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      2 | 7200000000 | Refresh Continuous Aggregate Policy [1000] | inserted 50 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      3 | 7200000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Mon Nov 24 00:00:00 4714 UTC BC, Sun Feb 09 00:00:00 2025 UTC ] (batch 2 of 2)
      4 | 7200000000 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      5 | 7200000000 | Refresh Continuous Aggregate Policy [1000] | inserted 20 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"

-- Should have no differences
SELECT
    count(*) > 0 AS has_diff
FROM
    ((SELECT * FROM conditions_by_day_manual_refresh ORDER BY 1, 2)
    EXCEPT
    (SELECT * FROM conditions_by_day ORDER BY 1, 2)) AS diff;
 has_diff 
----------
 f

-- Set max_batches_per_execution to 10
SELECT
    config
FROM
    alter_job(
        :'job_id',
        config => jsonb_set(:'config', '{max_batches_per_execution}', '10')
    );
                                                            config                                                            
------------------------------------------------------------------------------------------------------------------------------
 {"end_offset": null, "start_offset": null, "buckets_per_batch": 10, "mat_hypertable_id": 2, "max_batches_per_execution": 10}

TRUNCATE bgw_log;
-- Insert data into the past
INSERT INTO conditions
SELECT
    t, d, 10
FROM
    generate_series(
        '2020-02-05 00:00:00+00',
        '2020-03-05 00:00:00+00',
        '1 hour'::interval) AS t,
    generate_series(1,5) AS d;
-- advance time by 3h so that job runs one more time
SELECT ts_bgw_params_reset_time(extract(epoch from interval '3 hour')::bigint * 1000000, true);
 ts_bgw_params_reset_time 
--------------------------
 

-- Should process all four batches in the past
SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 

SELECT * FROM sorted_bgw_log;
 msg_no |  mock_time  |              application_name              |                                                                                  msg                                                                                  
--------+-------------+--------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
      0 | 10800000000 | DB Scheduler                               | [TESTING] Registered new background worker
      1 | 10800000000 | DB Scheduler                               | [TESTING] Wait until (RANDOM), started at (RANDOM)
      0 | 10800000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Sat Feb 29 00:00:00 2020 UTC, Fri Mar 06 00:00:00 2020 UTC ] (batch 1 of 4)
      1 | 10800000000 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      2 | 10800000000 | Refresh Continuous Aggregate Policy [1000] | inserted 30 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      3 | 10800000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Wed Feb 19 00:00:00 2020 UTC, Sat Feb 29 00:00:00 2020 UTC ] (batch 2 of 4)
      4 | 10800000000 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      5 | 10800000000 | Refresh Continuous Aggregate Policy [1000] | inserted 50 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      6 | 10800000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Sun Feb 09 00:00:00 2020 UTC, Wed Feb 19 00:00:00 2020 UTC ] (batch 3 of 4)
      7 | 10800000000 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      8 | 10800000000 | Refresh Continuous Aggregate Policy [1000] | inserted 50 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      9 | 10800000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Wed Feb 05 00:00:00 2020 UTC, Sun Feb 09 00:00:00 2020 UTC ] (batch 4 of 4)
     10 | 10800000000 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
     11 | 10800000000 | Refresh Continuous Aggregate Policy [1000] | inserted 20 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"

SELECT count(*) FROM conditions_by_day;
 count 
-------
   295

SELECT count(*) FROM conditions_by_day_manual_refresh;
 count 
-------
   145

CALL refresh_continuous_aggregate('conditions_by_day_manual_refresh', NULL, NULL);
SELECT count(*) FROM conditions_by_day;
 count 
-------
   295

SELECT count(*) FROM conditions_by_day_manual_refresh;
 count 
-------
   295

-- Should have no differences
SELECT
    count(*) > 0 AS has_diff
FROM
    ((SELECT * FROM conditions_by_day_manual_refresh ORDER BY 1, 2)
    EXCEPT
    (SELECT * FROM conditions_by_day ORDER BY 1, 2)) AS diff;
 has_diff 
----------
 f

-- Check invalid configurations
\set ON_ERROR_STOP 0
\set VERBOSITY default
SELECT
    config
FROM
    alter_job(
        :'job_id',
        config => jsonb_set(:'config', '{max_batches_per_execution}', '-1')
    );
ERROR:  invalid max batches per execution
DETAIL:  max_batches_per_execution: -1
HINT:  The max batches per execution should be greater than or equal to zero.
SELECT
    config
FROM
    alter_job(
        :'job_id',
        config => jsonb_set(:'config', '{buckets_per_batch}', '-1')
    );
ERROR:  invalid buckets per batch
DETAIL:  buckets_per_batch: -1
HINT:  The buckets per batch should be greater than or equal to zero.
\set VERBOSITY terse
\set ON_ERROR_STOP 1
-- Truncate all data from the original hypertable
TRUNCATE bgw_log, conditions;
-- advance time by 4h so that job runs one more time
SELECT ts_bgw_params_reset_time(extract(epoch from interval '4 hour')::bigint * 1000000, true);
 ts_bgw_params_reset_time 
--------------------------
 

-- Should fallback to single batch processing because there's no data to be refreshed on the original hypertable
SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 

SELECT * FROM sorted_bgw_log;
 msg_no |  mock_time  |              application_name              |                                                                            msg                                                                            
--------+-------------+--------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------
      0 | 14400000000 | DB Scheduler                               | [TESTING] Registered new background worker
      1 | 14400000000 | DB Scheduler                               | [TESTING] Wait until (RANDOM), started at (RANDOM)
      0 | 14400000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Mon Nov 24 00:00:00 4714 UTC BC, Thu Mar 06 00:00:00 2025 UTC ]
      1 | 14400000000 | Refresh Continuous Aggregate Policy [1000] | deleted 295 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      2 | 14400000000 | Refresh Continuous Aggregate Policy [1000] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"

-- Should return zero rows
SELECT count(*) FROM conditions_by_day;
 count 
-------
     0

-- 1 day of data
INSERT INTO conditions
SELECT
    t, d, 10
FROM
    generate_series(
        '2020-02-05 00:00:00+00',
        '2020-02-06 00:00:00+00',
        '1 hour'::interval) AS t,
    generate_series(1,5) AS d;
TRUNCATE bgw_log;
-- advance time by 5h so that job runs one more time
SELECT ts_bgw_params_reset_time(extract(epoch from interval '5 hour')::bigint * 1000000, true);
 ts_bgw_params_reset_time 
--------------------------
 

-- Should fallback to single batch processing because the refresh size is too small
SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 

SELECT * FROM sorted_bgw_log;
 msg_no |  mock_time  |              application_name              |                                                                          msg                                                                           
--------+-------------+--------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------
      0 | 18000000000 | DB Scheduler                               | [TESTING] Registered new background worker
      1 | 18000000000 | DB Scheduler                               | [TESTING] Wait until (RANDOM), started at (RANDOM)
      0 | 18000000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Wed Feb 05 00:00:00 2020 UTC, Fri Feb 07 00:00:00 2020 UTC ]
      1 | 18000000000 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      2 | 18000000000 | Refresh Continuous Aggregate Policy [1000] | inserted 10 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"

-- Should return 10 rows because the bucket width is `1 day` and buckets per batch is `10`
SELECT count(*) FROM conditions_by_day;
 count 
-------
    10

TRUNCATE conditions_by_day, conditions, bgw_log;
-- Less than 1 day of data (smaller than the bucket width)
INSERT INTO conditions
VALUES ('2020-02-05 00:00:00+00', 1, 10);
-- advance time by 6h so that job runs one more time
SELECT ts_bgw_params_reset_time(extract(epoch from interval '6 hour')::bigint * 1000000, true);
 ts_bgw_params_reset_time 
--------------------------
 

-- Should fallback to single batch processing because the refresh size is too small
SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 

SELECT * FROM sorted_bgw_log;
 msg_no |  mock_time  |              application_name              |                                                                            msg                                                                            
--------+-------------+--------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------
      0 | 21600000000 | DB Scheduler                               | [TESTING] Registered new background worker
      1 | 21600000000 | DB Scheduler                               | [TESTING] Registered new background worker
      2 | 21600000000 | DB Scheduler                               | [TESTING] Wait until (RANDOM), started at (RANDOM)
      0 | 21600000000 | Refresh Continuous Aggregate Policy [1000] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Mon Nov 24 00:00:00 4714 UTC BC, Thu Mar 06 00:00:00 2025 UTC ]
      1 | 21600000000 | Refresh Continuous Aggregate Policy [1000] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      2 | 21600000000 | Refresh Continuous Aggregate Policy [1000] | inserted 1 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"

-- Should return 1 row
SELECT count(*) FROM conditions_by_day;
 count 
-------
     1

SELECT delete_job(:job_id);
 delete_job 
------------
 

SELECT
    add_continuous_aggregate_policy(
        'conditions_by_day',
        start_offset => INTERVAL '15 days',
        end_offset => NULL,
        schedule_interval => INTERVAL '1 h',
        buckets_per_batch => 5,
        refresh_newest_first => true -- explicitly set to true to test the default behavior
    ) AS job_id \gset
SELECT
    add_continuous_aggregate_policy(
        'conditions_by_day_manual_refresh',
        start_offset => INTERVAL '15 days',
        end_offset => NULL,
        schedule_interval => INTERVAL '1 h',
        buckets_per_batch => 0 -- 0 means no batching, so it will refresh all buckets in one go
    ) AS job_id_manual \gset
TRUNCATE bgw_log, conditions_by_day, conditions_by_day_manual_refresh, conditions;
INSERT INTO conditions
SELECT
    t, d, 10
FROM
    generate_series(
        '2025-03-11 00:00:00+00'::timestamptz - INTERVAL '30 days',
        '2025-03-11 00:00:00+00'::timestamptz,
        '1 hour'::interval) AS t,
    generate_series(1,5) AS d;
SELECT ts_bgw_params_reset_time(0, true);
 ts_bgw_params_reset_time 
--------------------------
 

SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 

SELECT * FROM sorted_bgw_log;
 msg_no | mock_time |              application_name              |                                                                                  msg                                                                                  
--------+-----------+--------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
      0 |         0 | DB Scheduler                               | [TESTING] Registered new background worker
      1 |         0 | DB Scheduler                               | [TESTING] Registered new background worker
      2 |         0 | DB Scheduler                               | [TESTING] Wait until (RANDOM), started at (RANDOM)
      0 |         0 | Refresh Continuous Aggregate Policy [1001] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Tue Mar 11 00:00:00 2025 UTC, Wed Mar 12 00:00:00 2025 UTC ] (batch 1 of 4)
      1 |         0 | Refresh Continuous Aggregate Policy [1001] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      2 |         0 | Refresh Continuous Aggregate Policy [1001] | inserted 5 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      3 |         0 | Refresh Continuous Aggregate Policy [1001] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Thu Mar 06 00:00:00 2025 UTC, Tue Mar 11 00:00:00 2025 UTC ] (batch 2 of 4)
      4 |         0 | Refresh Continuous Aggregate Policy [1001] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      5 |         0 | Refresh Continuous Aggregate Policy [1001] | inserted 25 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      6 |         0 | Refresh Continuous Aggregate Policy [1001] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Sat Mar 01 00:00:00 2025 UTC, Thu Mar 06 00:00:00 2025 UTC ] (batch 3 of 4)
      7 |         0 | Refresh Continuous Aggregate Policy [1001] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      8 |         0 | Refresh Continuous Aggregate Policy [1001] | inserted 25 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      9 |         0 | Refresh Continuous Aggregate Policy [1001] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Mon Feb 24 00:00:00 2025 UTC, Sat Mar 01 00:00:00 2025 UTC ] (batch 4 of 4)
     10 |         0 | Refresh Continuous Aggregate Policy [1001] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
     11 |         0 | Refresh Continuous Aggregate Policy [1001] | inserted 25 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      0 |         0 | Refresh Continuous Aggregate Policy [1002] | continuous aggregate refresh (individual invalidation) on "conditions_by_day_manual_refresh" in window [ Mon Feb 24 00:00:00 2025 UTC, Wed Mar 12 00:00:00 2025 UTC ]
      1 |         0 | Refresh Continuous Aggregate Policy [1002] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_3"
      2 |         0 | Refresh Continuous Aggregate Policy [1002] | inserted 80 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_3"

-- Both continuous aggregates should have the same data
SELECT count(*) FROM conditions_by_day;
 count 
-------
    80

SELECT count(*) FROM conditions_by_day_manual_refresh;
 count 
-------
    80

-- Should have no differences
SELECT
    count(*) > 0 AS has_diff
FROM
    ((SELECT * FROM conditions_by_day_manual_refresh ORDER BY 1, 2)
    EXCEPT
    (SELECT * FROM conditions_by_day ORDER BY 1, 2)) AS diff;
 has_diff 
----------
 f

-- Testing with explicit refresh_newest_first = false (from oldest to newest)
SELECT delete_job(:job_id);
 delete_job 
------------
 

SELECT delete_job(:job_id_manual);
 delete_job 
------------
 

SELECT
    add_continuous_aggregate_policy(
        'conditions_by_day',
        start_offset => INTERVAL '15 days',
        end_offset => NULL,
        schedule_interval => INTERVAL '1 h',
        buckets_per_batch => 5,
        refresh_newest_first => false
    ) AS job_id \gset
SELECT
    config
FROM
    timescaledb_information.jobs
WHERE
    job_id = :'job_id';
                                                              config                                                              
----------------------------------------------------------------------------------------------------------------------------------
 {"end_offset": null, "start_offset": "@ 15 days", "buckets_per_batch": 5, "mat_hypertable_id": 2, "refresh_newest_first": false}

TRUNCATE bgw_log, conditions_by_day;
SELECT ts_bgw_params_reset_time(0, true);
 ts_bgw_params_reset_time 
--------------------------
 

SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 

SELECT * FROM sorted_bgw_log;
 msg_no | mock_time |              application_name              |                                                                                  msg                                                                                  
--------+-----------+--------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
      0 |         0 | DB Scheduler                               | [TESTING] Registered new background worker
      1 |         0 | DB Scheduler                               | [TESTING] Wait until (RANDOM), started at (RANDOM)
      0 |         0 | Refresh Continuous Aggregate Policy [1003] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Mon Feb 24 00:00:00 2025 UTC, Sat Mar 01 00:00:00 2025 UTC ] (batch 1 of 4)
      1 |         0 | Refresh Continuous Aggregate Policy [1003] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      2 |         0 | Refresh Continuous Aggregate Policy [1003] | inserted 25 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      3 |         0 | Refresh Continuous Aggregate Policy [1003] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Sat Mar 01 00:00:00 2025 UTC, Thu Mar 06 00:00:00 2025 UTC ] (batch 2 of 4)
      4 |         0 | Refresh Continuous Aggregate Policy [1003] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      5 |         0 | Refresh Continuous Aggregate Policy [1003] | inserted 25 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      6 |         0 | Refresh Continuous Aggregate Policy [1003] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Thu Mar 06 00:00:00 2025 UTC, Tue Mar 11 00:00:00 2025 UTC ] (batch 3 of 4)
      7 |         0 | Refresh Continuous Aggregate Policy [1003] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
      8 |         0 | Refresh Continuous Aggregate Policy [1003] | inserted 25 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"
      9 |         0 | Refresh Continuous Aggregate Policy [1003] | continuous aggregate refresh (individual invalidation) on "conditions_by_day" in window [ Tue Mar 11 00:00:00 2025 UTC, Wed Mar 12 00:00:00 2025 UTC ] (batch 4 of 4)
     10 |         0 | Refresh Continuous Aggregate Policy [1003] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_2"
     11 |         0 | Refresh Continuous Aggregate Policy [1003] | inserted 5 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_2"

-- Both continuous aggregates should have the same data
SELECT count(*) FROM conditions_by_day;
 count 
-------
    80

SELECT count(*) FROM conditions_by_day_manual_refresh;
 count 
-------
    80

-- Should have no differences
SELECT
    count(*) > 0 AS has_diff
FROM
    ((SELECT * FROM conditions_by_day_manual_refresh ORDER BY 1, 2)
    EXCEPT
    (SELECT * FROM conditions_by_day ORDER BY 1, 2)) AS diff;
 has_diff 
----------
 f

-- Tests with Variable sized bucket
SELECT delete_job(:job_id);
 delete_job 
------------
 

TRUNCATE conditions;
INSERT INTO conditions
SELECT
    t, d, 10
FROM
    generate_series(
        '2025-01-01 00:00:00+00',
        '2025-10-08 00:00:00+00',
        '1 hour'::interval) AS t,
    generate_series(1,5) AS d;
CREATE MATERIALIZED VIEW conditions_by_month
WITH (timescaledb.continuous, timescaledb.materialized_only=true) AS
SELECT
    time_bucket('1 month', time),
    device_id,
    count(*),
    min(temperature),
    max(temperature),
    avg(temperature),
    sum(temperature)
FROM
    conditions
GROUP BY
    1, 2
WITH NO DATA;
SELECT
    add_continuous_aggregate_policy(
        'conditions_by_month',
        start_offset => INTERVAL '600 days',
        end_offset => INTERVAL '7 days',
        schedule_interval => INTERVAL '1 day',
        refresh_newest_first => false
    ) AS job_id \gset
SELECT
    config
FROM
    timescaledb_information.jobs
WHERE
    job_id = :'job_id';
                                                     config                                                      
-----------------------------------------------------------------------------------------------------------------
 {"end_offset": "@ 7 days", "start_offset": "@ 600 days", "mat_hypertable_id": 4, "refresh_newest_first": false}

TRUNCATE bgw_log, conditions_by_day;
SELECT ts_bgw_params_reset_time(0, true);
 ts_bgw_params_reset_time 
--------------------------
 

SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 

SELECT * FROM sorted_bgw_log;
 msg_no | mock_time |              application_name              |                                                                                   msg                                                                                   
--------+-----------+--------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      0 |         0 | DB Scheduler                               | [TESTING] Registered new background worker
      1 |         0 | DB Scheduler                               | [TESTING] Wait until (RANDOM), started at (RANDOM)
      0 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "conditions_by_month" in window [ Mon Dec 23 00:00:00 2024 UTC, Wed Jan 22 00:00:00 2025 UTC ] (batch 1 of 3)
      1 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_4"
      2 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 5 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_4"
      3 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "conditions_by_month" in window [ Wed Jan 22 00:00:00 2025 UTC, Fri Feb 21 00:00:00 2025 UTC ] (batch 2 of 3)
      4 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 5 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_4"
      5 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 10 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_4"
      6 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "conditions_by_month" in window [ Fri Feb 21 00:00:00 2025 UTC, Sat Mar 01 00:00:00 2025 UTC ] (batch 3 of 3)
      7 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 5 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_4"
      8 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 5 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_4"

\c :TEST_DBNAME :ROLE_SUPERUSER
REASSIGN OWNED BY test_cagg_refresh_policy_user TO :ROLE_SUPERUSER;
REVOKE ALL ON SCHEMA public FROM test_cagg_refresh_policy_user;
DROP ROLE test_cagg_refresh_policy_user;
--------------------------------------------
-- "Timestamp out of range" issue - SDC 3189
CREATE TABLE test_metrics (
    time TIMESTAMPTZ NOT NULL,
    device_id INT,
    value FLOAT
);
-- Set chunk time to 1 day
SELECT create_hypertable('test_metrics', 'time', chunk_time_interval => INTERVAL '1 day');
     create_hypertable     
---------------------------
 (4,public,test_metrics,t)
(1 row)

-- Create a continuous aggregate with fixed time_bucket 1 hour
CREATE MATERIALIZED VIEW test_cagg
WITH (timescaledb.continuous) AS
SELECT 
    time_bucket('1 hour', time) AS bucket,
    device_id,
    avg(value) as avg_value
FROM test_metrics
GROUP BY 1, 2;
NOTICE:  continuous aggregate "test_cagg" is already up-to-date
--Create a continuous aggregate with variable time_bucket
CREATE MATERIALIZED VIEW test_cagg_var
WITH (timescaledb.continuous) AS
SELECT 
    time_bucket('1 month', time) AS bucket,
    device_id,
    avg(value) as avg_value
FROM test_metrics
GROUP BY 1, 2;
NOTICE:  continuous aggregate "test_cagg_var" is already up-to-date
INSERT INTO test_metrics (time, device_id, value)
VALUES ('2025-08-05', 1, 10.0);
-- Force a refresh of the continuous aggregates
CALL refresh_continuous_aggregate('test_cagg', NULL, interval '1 hour');
--Check materialization log, 
--for the cagg with fixed window bucket, 
--it will have a row of [-9223372036854775808, -210866803200000001],
--that is [-infinity, CAGG_INVALIDATION_WRONG_GREATEST_VALUE]
SELECT lowest_modified_value, greatest_modified_value 
FROM _timescaledb_catalog.continuous_aggs_materialization_invalidation_log
WHERE materialization_id = (SELECT mat_hypertable_id FROM _timescaledb_catalog.continuous_agg 
                            WHERE user_view_name = 'test_cagg')
      AND greatest_modified_value = -210866803200000001;
 lowest_modified_value | greatest_modified_value 
-----------------------+-------------------------
  -9223372036854775808 |     -210866803200000001
(1 row)

CALL refresh_continuous_aggregate('test_cagg_var', NULL, interval '1 month');
--The cagg with variable window bucket won't have 
--the row of [-9223372036854775808, -210866803200000001],
--because we use -infinity for the refresh window range_start for variable bucket.
SELECT lowest_modified_value, greatest_modified_value 
FROM _timescaledb_catalog.continuous_aggs_materialization_invalidation_log
WHERE materialization_id = (SELECT mat_hypertable_id FROM _timescaledb_catalog.continuous_agg 
                            WHERE user_view_name = 'test_cagg_var')
      AND greatest_modified_value = -210866803200000001;
 lowest_modified_value | greatest_modified_value 
-----------------------+-------------------------
(0 rows)

--Now insert some data that would trigger incremental refresh on test_cagg
INSERT INTO test_metrics (time, device_id, value)
    VALUES 
        ('2025-08-05 15:00:00-05', 1, 10.0),
        ('2025-07-03 19:00:00-05', 1, 20.0);
SELECT add_continuous_aggregate_policy('test_cagg',
  start_offset => NULL,
  end_offset => INTERVAL '1 hour',
  schedule_interval => INTERVAL '5 minute');
 add_continuous_aggregate_policy 
---------------------------------
                            1004
(1 row)

SELECT add_continuous_aggregate_policy('test_cagg_var',
  start_offset => NULL,
  end_offset => INTERVAL '1 hour',
  schedule_interval => INTERVAL '5 minute');
 add_continuous_aggregate_policy 
---------------------------------
                            1005
(1 row)

 --make the policy run and check the log
 --before the fix in https://github.com/timescale/timescaledb/pull/8476 this would result
 --in a crash of failed Assert("refresh_window->end > result.start") on debug build,
 --or "Timestamp out of range" error on release build
 --After the fix, it will run successfully
TRUNCATE bgw_log;
SELECT ts_bgw_params_reset_time(0, true);
 ts_bgw_params_reset_time 
--------------------------
 
(1 row)

SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 
(1 row)

SELECT * FROM sorted_bgw_log;
 msg_no | mock_time |              application_name              |                                                                               msg                                                                               
--------+-----------+--------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------
      0 |         0 | DB Scheduler                               | [TESTING] Registered new background worker
      1 |         0 | DB Scheduler                               | [TESTING] Registered new background worker
      2 |         0 | DB Scheduler                               | [TESTING] Wait until (RANDOM), started at (RANDOM)
      0 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 13:00:00 2025 PDT, Tue Aug 05 14:00:00 2025 PDT ] (batch 1 of 45)
      1 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
      2 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 1 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
      3 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 12:00:00 2025 PDT, Tue Aug 05 13:00:00 2025 PDT ] (batch 2 of 45)
      4 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
      5 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
      6 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 11:00:00 2025 PDT, Tue Aug 05 12:00:00 2025 PDT ] (batch 3 of 45)
      7 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
      8 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
      9 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 10:00:00 2025 PDT, Tue Aug 05 11:00:00 2025 PDT ] (batch 4 of 45)
     10 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     11 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     12 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 09:00:00 2025 PDT, Tue Aug 05 10:00:00 2025 PDT ] (batch 5 of 45)
     13 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     14 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     15 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 08:00:00 2025 PDT, Tue Aug 05 09:00:00 2025 PDT ] (batch 6 of 45)
     16 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     17 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     18 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 07:00:00 2025 PDT, Tue Aug 05 08:00:00 2025 PDT ] (batch 7 of 45)
     19 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     20 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     21 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 06:00:00 2025 PDT, Tue Aug 05 07:00:00 2025 PDT ] (batch 8 of 45)
     22 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     23 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     24 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 05:00:00 2025 PDT, Tue Aug 05 06:00:00 2025 PDT ] (batch 9 of 45)
     25 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     26 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     27 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 04:00:00 2025 PDT, Tue Aug 05 05:00:00 2025 PDT ] (batch 10 of 45)
     28 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     29 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     30 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 03:00:00 2025 PDT, Tue Aug 05 04:00:00 2025 PDT ] (batch 11 of 45)
     31 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     32 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     33 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 02:00:00 2025 PDT, Tue Aug 05 03:00:00 2025 PDT ] (batch 12 of 45)
     34 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     35 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     36 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 01:00:00 2025 PDT, Tue Aug 05 02:00:00 2025 PDT ] (batch 13 of 45)
     37 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     38 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     39 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Tue Aug 05 00:00:00 2025 PDT, Tue Aug 05 01:00:00 2025 PDT ] (batch 14 of 45)
     40 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 1 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     41 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 1 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     42 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Mon Aug 04 23:00:00 2025 PDT, Tue Aug 05 00:00:00 2025 PDT ] (batch 15 of 45)
     43 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     44 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     45 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Mon Aug 04 22:00:00 2025 PDT, Mon Aug 04 23:00:00 2025 PDT ] (batch 16 of 45)
     46 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     47 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     48 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Mon Aug 04 21:00:00 2025 PDT, Mon Aug 04 22:00:00 2025 PDT ] (batch 17 of 45)
     49 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     50 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     51 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Mon Aug 04 20:00:00 2025 PDT, Mon Aug 04 21:00:00 2025 PDT ] (batch 18 of 45)
     52 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     53 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     54 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Mon Aug 04 19:00:00 2025 PDT, Mon Aug 04 20:00:00 2025 PDT ] (batch 19 of 45)
     55 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     56 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     57 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Mon Aug 04 18:00:00 2025 PDT, Mon Aug 04 19:00:00 2025 PDT ] (batch 20 of 45)
     58 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     59 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     60 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Mon Aug 04 17:00:00 2025 PDT, Mon Aug 04 18:00:00 2025 PDT ] (batch 21 of 45)
     61 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     62 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     63 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 16:00:00 2025 PDT, Fri Jul 04 17:00:00 2025 PDT ] (batch 22 of 45)
     64 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     65 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     66 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 15:00:00 2025 PDT, Fri Jul 04 16:00:00 2025 PDT ] (batch 23 of 45)
     67 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     68 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     69 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 14:00:00 2025 PDT, Fri Jul 04 15:00:00 2025 PDT ] (batch 24 of 45)
     70 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     71 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     72 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 13:00:00 2025 PDT, Fri Jul 04 14:00:00 2025 PDT ] (batch 25 of 45)
     73 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     74 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     75 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 12:00:00 2025 PDT, Fri Jul 04 13:00:00 2025 PDT ] (batch 26 of 45)
     76 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     77 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     78 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 11:00:00 2025 PDT, Fri Jul 04 12:00:00 2025 PDT ] (batch 27 of 45)
     79 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     80 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     81 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 10:00:00 2025 PDT, Fri Jul 04 11:00:00 2025 PDT ] (batch 28 of 45)
     82 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     83 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     84 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 09:00:00 2025 PDT, Fri Jul 04 10:00:00 2025 PDT ] (batch 29 of 45)
     85 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     86 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     87 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 08:00:00 2025 PDT, Fri Jul 04 09:00:00 2025 PDT ] (batch 30 of 45)
     88 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     89 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     90 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 07:00:00 2025 PDT, Fri Jul 04 08:00:00 2025 PDT ] (batch 31 of 45)
     91 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     92 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     93 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 06:00:00 2025 PDT, Fri Jul 04 07:00:00 2025 PDT ] (batch 32 of 45)
     94 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     95 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     96 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 05:00:00 2025 PDT, Fri Jul 04 06:00:00 2025 PDT ] (batch 33 of 45)
     97 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
     98 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
     99 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 04:00:00 2025 PDT, Fri Jul 04 05:00:00 2025 PDT ] (batch 34 of 45)
    100 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
    101 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
    102 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 03:00:00 2025 PDT, Fri Jul 04 04:00:00 2025 PDT ] (batch 35 of 45)
    103 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
    104 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
    105 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 02:00:00 2025 PDT, Fri Jul 04 03:00:00 2025 PDT ] (batch 36 of 45)
    106 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
    107 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
    108 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 01:00:00 2025 PDT, Fri Jul 04 02:00:00 2025 PDT ] (batch 37 of 45)
    109 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
    110 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
    111 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Fri Jul 04 00:00:00 2025 PDT, Fri Jul 04 01:00:00 2025 PDT ] (batch 38 of 45)
    112 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
    113 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
    114 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Thu Jul 03 23:00:00 2025 PDT, Fri Jul 04 00:00:00 2025 PDT ] (batch 39 of 45)
    115 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
    116 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
    117 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Thu Jul 03 22:00:00 2025 PDT, Thu Jul 03 23:00:00 2025 PDT ] (batch 40 of 45)
    118 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
    119 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
    120 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Thu Jul 03 21:00:00 2025 PDT, Thu Jul 03 22:00:00 2025 PDT ] (batch 41 of 45)
    121 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
    122 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
    123 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Thu Jul 03 20:00:00 2025 PDT, Thu Jul 03 21:00:00 2025 PDT ] (batch 42 of 45)
    124 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
    125 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
    126 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Thu Jul 03 19:00:00 2025 PDT, Thu Jul 03 20:00:00 2025 PDT ] (batch 43 of 45)
    127 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
    128 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
    129 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Thu Jul 03 18:00:00 2025 PDT, Thu Jul 03 19:00:00 2025 PDT ] (batch 44 of 45)
    130 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
    131 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 0 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
    132 |         0 | Refresh Continuous Aggregate Policy [1004] | continuous aggregate refresh (individual invalidation) on "test_cagg" in window [ Thu Jul 03 17:00:00 2025 PDT, Thu Jul 03 18:00:00 2025 PDT ] (batch 45 of 45)
    133 |         0 | Refresh Continuous Aggregate Policy [1004] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_5"
    134 |         0 | Refresh Continuous Aggregate Policy [1004] | inserted 1 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_5"
      0 |         0 | Refresh Continuous Aggregate Policy [1005] | refresh window size (00:00:00) is smaller than or equal to batch size (30 days), falling back to single batch processing
      1 |         0 | Refresh Continuous Aggregate Policy [1005] | continuous aggregate refresh (individual invalidation) on "test_cagg_var" in window [ Mon Jun 30 17:00:00 2025 PDT, Thu Jul 31 17:00:00 2025 PDT ]
      2 |         0 | Refresh Continuous Aggregate Policy [1005] | deleted 0 row(s) from materialization table "_timescaledb_internal._materialized_hypertable_6"
      3 |         0 | Refresh Continuous Aggregate Policy [1005] | inserted 1 row(s) into materialization table "_timescaledb_internal._materialized_hypertable_6"
(142 rows)

--clean up
DROP TABLE test_metrics cascade;
NOTICE:  drop cascades to 4 other objects
NOTICE:  drop cascades to 2 other objects
NOTICE:  drop cascades to table _timescaledb_internal._hyper_6_32_chunk
