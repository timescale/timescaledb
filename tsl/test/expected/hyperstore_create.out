-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
-- Testing the basic API for creating a hyperstore
-- This is a replacement for compress chunk for the time being.
create function twist_chunk(chunk regclass) returns regclass language plpgsql
as $$
begin
    execute format('alter table %s set access method hyperstore', chunk);
    return chunk;
end
$$;
CREATE TABLE test2(
       created_at timestamptz not null,
       location_id int,
       device_id int,
       temp float,
       humidity float
);
create index on test2(device_id, created_at);
\set ON_ERROR_STOP 0
alter table test2 set access method hyperstore;
ERROR:  hyperstore access method not supported on "test2"
\set ON_ERROR_STOP 1
select create_hypertable('test2', 'created_at');
 create_hypertable  
--------------------
 (1,public,test2,t)
(1 row)

\set ON_ERROR_STOP 0
-- Should show error since there is no namespace.
alter table test2
      set access method hyperstore,
      set (compress_segmentby = 'location_id');
WARNING:  there was some uncertainty picking the default segment by for the hypertable: Please make sure device_id is not a unique column and appropriate for a segment by
NOTICE:  default segment by for hypertable "test2" is set to "device_id"
NOTICE:  default order by for hypertable "test2" is set to "created_at DESC"
ERROR:  unrecognized parameter "compress_segmentby"
\set ON_ERROR_STOP 1
alter table test2
      set access method hyperstore,
      set (timescaledb.compress_segmentby = 'location_id');
NOTICE:  default order by for hypertable "test2" is set to "created_at DESC, device_id"
\set ON_ERROR_STOP 0
-- This shows an error but the error is weird, we should probably get
-- a better one.
alter table test2
      set access method hyperstore,
      set (compress_segmentby = 'location_id');
ERROR:  operation not supported on hypertables that have compression enabled
\set ON_ERROR_STOP 1
select relname, amname
  from pg_class join pg_am on (relam = pg_am.oid)
 where relname in ('test2');
 relname |   amname   
---------+------------
 test2   | hyperstore
(1 row)

-- This will create new chunks for the hypertable
insert into test2 (created_at, location_id, device_id, temp, humidity)
select t, ceil(random()*10), ceil(random()*30), random()*40, random()*100
from generate_series('2022-06-01'::timestamptz, '2022-07-01', '5s') t;
-- These should all use the hyperstore access method
select relname, amname
  from show_chunks('test2') as chunk
  join pg_class on (pg_class.oid = chunk)
  join pg_am on (relam = pg_am.oid);
      relname      |   amname   
-------------------+------------
 _hyper_1_1_chunk  | hyperstore
 _hyper_1_3_chunk  | hyperstore
 _hyper_1_5_chunk  | hyperstore
 _hyper_1_7_chunk  | hyperstore
 _hyper_1_9_chunk  | hyperstore
 _hyper_1_11_chunk | hyperstore
(6 rows)

-- Show compression settings for hyperstore across catalog and views
select * from _timescaledb_catalog.compression_settings;
                      relid                      |   segmentby   |        orderby         | orderby_desc | orderby_nullsfirst 
-------------------------------------------------+---------------+------------------------+--------------+--------------------
 test2                                           | {location_id} | {created_at,device_id} | {t,f}        | {t,f}
 _timescaledb_internal.compress_hyper_3_2_chunk  | {location_id} | {created_at,device_id} | {t,f}        | {t,f}
 _timescaledb_internal.compress_hyper_3_4_chunk  | {location_id} | {created_at,device_id} | {t,f}        | {t,f}
 _timescaledb_internal.compress_hyper_3_6_chunk  | {location_id} | {created_at,device_id} | {t,f}        | {t,f}
 _timescaledb_internal.compress_hyper_3_8_chunk  | {location_id} | {created_at,device_id} | {t,f}        | {t,f}
 _timescaledb_internal.compress_hyper_3_10_chunk | {location_id} | {created_at,device_id} | {t,f}        | {t,f}
 _timescaledb_internal.compress_hyper_3_12_chunk | {location_id} | {created_at,device_id} | {t,f}        | {t,f}
(7 rows)

select * from timescaledb_information.compression_settings;
 hypertable_schema | hypertable_name |   attname   | segmentby_column_index | orderby_column_index | orderby_asc | orderby_nullsfirst 
-------------------+-----------------+-------------+------------------------+----------------------+-------------+--------------------
 public            | test2           | location_id |                      1 |                      |             | 
 public            | test2           | created_at  |                        |                    1 | f           | t
 public            | test2           | device_id   |                        |                    2 | t           | f
(3 rows)

select * from timescaledb_information.chunk_compression_settings;
 hypertable |                  chunk                  |  segmentby  |          orderby          
------------+-----------------------------------------+-------------+---------------------------
 test2      | _timescaledb_internal._hyper_1_1_chunk  | location_id | created_at DESC,device_id
 test2      | _timescaledb_internal._hyper_1_3_chunk  | location_id | created_at DESC,device_id
 test2      | _timescaledb_internal._hyper_1_5_chunk  | location_id | created_at DESC,device_id
 test2      | _timescaledb_internal._hyper_1_7_chunk  | location_id | created_at DESC,device_id
 test2      | _timescaledb_internal._hyper_1_9_chunk  | location_id | created_at DESC,device_id
 test2      | _timescaledb_internal._hyper_1_11_chunk | location_id | created_at DESC,device_id
(6 rows)

