-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
\c :TEST_DBNAME :ROLE_SUPERUSER
GRANT CREATE ON DATABASE :"TEST_DBNAME" TO :ROLE_DEFAULT_PERM_USER;
SET ROLE :ROLE_DEFAULT_PERM_USER;
CREATE SCHEMA "ChunkSchema";
-- Use range types as well for columns
CREATE TABLE chunkapi(time timestamptz not null, device int, temp float, rng int8range);
SELECT * FROM create_hypertable('chunkapi', 'time', 'device', 2);
 hypertable_id | schema_name | table_name | created 
---------------+-------------+------------+---------
             1 | public      | chunkapi   | t
(1 row)

INSERT INTO chunkapi VALUES ('2018-01-01 05:00:00-8', 1, 23.4, int8range(4, 10));
SELECT (_timescaledb_functions.show_chunk(show_chunks)).*
FROM show_chunks('chunkapi')
ORDER BY chunk_id;
 chunk_id | hypertable_id |      schema_name      |    table_name    | relkind |                                            slices                                            
----------+---------------+-----------------------+------------------+---------+----------------------------------------------------------------------------------------------
        1 |             1 | _timescaledb_internal | _hyper_1_1_chunk | r       | {"time": [1514419200000000, 1515024000000000], "device": [-9223372036854775808, 1073741823]}
(1 row)

-- Creating a chunk with the constraints of an existing chunk should
-- return the existing chunk
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi',' {"time": [1514419200000000, 1515024000000000], "device": [-9223372036854775808, 1073741823]}');
 chunk_id | hypertable_id |      schema_name      |    table_name    | relkind |                                            slices                                            | created 
----------+---------------+-----------------------+------------------+---------+----------------------------------------------------------------------------------------------+---------
        1 |             1 | _timescaledb_internal | _hyper_1_1_chunk | r       | {"time": [1514419200000000, 1515024000000000], "device": [-9223372036854775808, 1073741823]} | f
(1 row)

\set VERBOSITY default
\set ON_ERROR_STOP 0
-- Modified time constraint should fail with collision
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi',' {"time": [1514419600000000, 1515024000000000], "device": [-9223372036854775808, 1073741823]}');
ERROR:  chunk creation failed due to collision
-- Missing dimension
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi',' {"time": [1514419600000000, 1515024000000000]}');
ERROR:  invalid hypercube for hypertable "chunkapi"
DETAIL:  invalid number of hypercube dimensions
-- Extra dimension
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi',' {"time": [1514419600000000, 1515024000000000],  "device": [-9223372036854775808, 1073741823], "time2": [1514419600000000, 1515024000000000]}');
ERROR:  invalid hypercube for hypertable "chunkapi"
DETAIL:  invalid number of hypercube dimensions
-- Bad dimension name
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi',' {"time": [1514419600000000, 1515024000000000],  "dev": [-9223372036854775808, 1073741823]}');
ERROR:  invalid hypercube for hypertable "chunkapi"
DETAIL:  dimension "dev" does not exist in hypertable
-- Same dimension twice
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi',' {"time": [1514419600000000, 1515024000000000], "time": [1514419600000000, 1515024000000000]}');
ERROR:  invalid hypercube for hypertable "chunkapi"
DETAIL:  invalid number of hypercube dimensions
-- Bad bounds format
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi',' {"time": ["1514419200000000", 1515024000000000], "device": [-9223372036854775808, 1073741823]}');
ERROR:  invalid hypercube for hypertable "chunkapi"
DETAIL:  constraint for dimension "time" is not numeric
-- Bad slices format
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi',' {"time": [1515024000000000], "device": [-9223372036854775808, 1073741823]}');
ERROR:  invalid hypercube for hypertable "chunkapi"
DETAIL:  unexpected number of dimensional bounds for dimension "time"
-- Bad slices json
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi',' {"time: [1515024000000000] "device": [-9223372036854775808, 1073741823]}');
ERROR:  invalid input syntax for type json
LINE 1: ...OM _timescaledb_functions.create_chunk('chunkapi',' {"time: ...
                                                             ^
DETAIL:  Token "device" is invalid.
CONTEXT:  JSON data, line 1:  {"time: [1515024000000000] "device...
\set ON_ERROR_STOP 1
-- Test that granting insert on tables allow create_chunk to be
-- called. This will also create a chunk that does not collide and has
-- a custom schema and name.
SET ROLE :ROLE_SUPERUSER;
GRANT INSERT ON chunkapi TO :ROLE_DEFAULT_PERM_USER_2;
SET ROLE :ROLE_DEFAULT_PERM_USER_2;
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi',' {"time": [1515024000000000, 1519024000000000], "device": [-9223372036854775808, 1073741823]}', 'ChunkSchema', 'My_chunk_Table_name');
 chunk_id | hypertable_id | schema_name |     table_name      | relkind |                                            slices                                            | created 
----------+---------------+-------------+---------------------+---------+----------------------------------------------------------------------------------------------+---------
        2 |             1 | ChunkSchema | My_chunk_Table_name | r       | {"time": [1515024000000000, 1519024000000000], "device": [-9223372036854775808, 1073741823]} | t
(1 row)

SET ROLE :ROLE_SUPERUSER;
DROP TABLE chunkapi;
-- Test creating a chunk from an existing chunk table which was not
-- created via create_chunk_table and having a different name.
CREATE TABLE devices (id int PRIMARY KEY);
INSERT INTO devices VALUES (1);
CREATE TABLE chunkapi (time timestamptz NOT NULL PRIMARY KEY, device int REFERENCES devices(id), temp float  CHECK(temp > 0));
SELECT * FROM create_hypertable('chunkapi', 'time');
 hypertable_id | schema_name | table_name | created 
---------------+-------------+------------+---------
             2 | public      | chunkapi   | t
(1 row)

INSERT INTO chunkapi VALUES ('2018-01-01 05:00:00-8', 1, 23.4);
SELECT chunk_schema AS "CHUNK_SCHEMA", chunk_name AS "CHUNK_NAME"
FROM timescaledb_information.chunks c
ORDER BY chunk_name DESC
LIMIT 1 \gset
SELECT slices AS "SLICES"
FROM _timescaledb_functions.show_chunk(:'CHUNK_SCHEMA'||'.'||:'CHUNK_NAME') \gset
TRUNCATE chunkapi;
CREATE TABLE newchunk (time timestamptz NOT NULL, device int, temp float);
SELECT * FROM test.show_constraints('newchunk');
 Constraint | Type | Columns | Index | Expr | Deferrable | Deferred | Validated 
------------+------+---------+-------+------+------------+----------+-----------
(0 rows)

INSERT INTO newchunk VALUES ('2018-01-01 05:00:00-8', 1, 23.4);
\set ON_ERROR_STOP 0
-- Creating the chunk without required CHECK constraints on a table
-- should fail. Currently, PostgreSQL only enforces presence of CHECK
-- constraints, but not foreign key, unique, or primary key
-- constraints. We should probably add checks to enforce the latter
-- too or auto-create all constraints.
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', :'SLICES', :'CHUNK_SCHEMA', :'CHUNK_NAME', 'newchunk');
ERROR:  child table is missing constraint "chunkapi_temp_check"
\set ON_ERROR_STOP 1
-- Add the missing CHECK constraint. Note that the name must be the
-- same as on the parent table.
ALTER TABLE newchunk ADD CONSTRAINT chunkapi_temp_check CHECK (temp > 0);
CREATE TABLE newchunk2 as select * from newchunk;
ALTER TABLE newchunk2 ADD CONSTRAINT chunkapi_temp_check CHECK (temp > 0);
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', :'SLICES', :'CHUNK_SCHEMA', :'CHUNK_NAME', 'newchunk');
 chunk_id | hypertable_id |      schema_name      |    table_name    | relkind |                     slices                     | created 
----------+---------------+-----------------------+------------------+---------+------------------------------------------------+---------
        5 |             2 | _timescaledb_internal | _hyper_2_3_chunk | r       | {"time": [1514419200000000, 1515024000000000]} | t
(1 row)

-- adding an existing table to an exiting range must fail
\set ON_ERROR_STOP 0
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', :'SLICES', :'CHUNK_SCHEMA', :'CHUNK_NAME', 'newchunk2');
ERROR:  chunk creation failed due to collision
\set ON_ERROR_STOP 1
-- Show the chunk and that names are what we'd expect
SELECT
	:'CHUNK_SCHEMA' AS expected_schema,
	:'CHUNK_NAME' AS expected_table_name,
	(_timescaledb_functions.show_chunk(ch)).*
FROM show_chunks('chunkapi') ch;
    expected_schema    | expected_table_name | chunk_id | hypertable_id |      schema_name      |    table_name    | relkind |                     slices                     
-----------------------+---------------------+----------+---------------+-----------------------+------------------+---------+------------------------------------------------
 _timescaledb_internal | _hyper_2_3_chunk    |        5 |             2 | _timescaledb_internal | _hyper_2_3_chunk | r       | {"time": [1514419200000000, 1515024000000000]}
(1 row)

-- The chunk should inherit the hypertable
SELECT relname
FROM pg_catalog.pg_inherits, pg_class
WHERE inhrelid = (:'CHUNK_SCHEMA'||'.'||:'CHUNK_NAME')::regclass AND inhparent = oid;
 relname  
----------
 chunkapi
(1 row)

-- Test that it is possible to query the data via the hypertable
SELECT * FROM chunkapi ORDER BY 1,2,3;
             time             | device | temp 
------------------------------+--------+------
 Mon Jan 01 05:00:00 2018 PST |      1 | 23.4
(1 row)

-- Show that the chunk has all the necessary constraints. These
-- include inheritable constraints and dimensional constraints, which
-- are specific to the chunk.  Currently, foreign key, unique, and
-- primary key constraints are not inherited or auto-created.
SELECT * FROM test.show_constraints(format('%I.%I', :'CHUNK_SCHEMA', :'CHUNK_NAME')::regclass);
        Constraint        | Type | Columns  |                   Index                   |                                                                      Expr                                                                      | Deferrable | Deferred | Validated 
--------------------------+------+----------+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+------------+----------+-----------
 5_5_chunkapi_device_fkey | f    | {device} | devices_pkey                              |                                                                                                                                                | f          | f        | t
 5_6_chunkapi_pkey        | p    | {time}   | _timescaledb_internal."5_6_chunkapi_pkey" |                                                                                                                                                | f          | f        | t
 chunkapi_temp_check      | c    | {temp}   | -                                         | (temp > (0)::double precision)                                                                                                                 | f          | f        | t
 constraint_6             | c    | {time}   | -                                         | (("time" >= 'Wed Dec 27 16:00:00 2017 PST'::timestamp with time zone) AND ("time" < 'Wed Jan 03 16:00:00 2018 PST'::timestamp with time zone)) | f          | f        | t
(4 rows)

TRUNCATE chunkapi;
-- Create a table with extra columns
CREATE TABLE extra_col_chunk (time timestamptz NOT NULL, device int, temp float, extra int, CONSTRAINT chunkapi_temp_check CHECK (temp > 0));
-- Adding a new chunk with extra column should fail
\set ON_ERROR_STOP 0
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', '{"time": [1514419200000000, 1515024000000000]}', NULL, NULL, 'extra_col_chunk');
ERROR:  table "extra_col_chunk" contains column "extra" not found in parent "chunkapi"
DETAIL:  The new chunk can contain only the columns present in parent.
\set ON_ERROR_STOP 1
-- It should succeed after dropping the extra column
ALTER TABLE extra_col_chunk DROP COLUMN extra;
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', '{"time": [1514419200000000, 1515024000000000]}', NULL, NULL, 'extra_col_chunk');
 chunk_id | hypertable_id |      schema_name      |    table_name    | relkind |                     slices                     | created 
----------+---------------+-----------------------+------------------+---------+------------------------------------------------+---------
        6 |             2 | _timescaledb_internal | _hyper_2_6_chunk | r       | {"time": [1514419200000000, 1515024000000000]} | t
(1 row)

-- Test creating a chunk with columns in different order
CREATE TABLE reordered_chunk (device int, temp float, time timestamptz NOT NULL, CONSTRAINT chunkapi_temp_check CHECK (temp > 0));
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', '{"time": [1515024000000000, 1515628800000000]}', NULL, NULL, 'reordered_chunk');
 chunk_id | hypertable_id |      schema_name      |    table_name    | relkind |                     slices                     | created 
----------+---------------+-----------------------+------------------+---------+------------------------------------------------+---------
        7 |             2 | _timescaledb_internal | _hyper_2_7_chunk | r       | {"time": [1515024000000000, 1515628800000000]} | t
(1 row)

-- Test creating a chunk with initially missing a column
CREATE TABLE missing_col_chunk (time timestamptz NOT NULL, device int);
INSERT INTO missing_col_chunk (time, device) VALUES ('2018-01-11 05:00:00-8', 1);
ALTER TABLE missing_col_chunk ADD COLUMN temp float CONSTRAINT chunkapi_temp_check CHECK (temp > 0);
INSERT INTO missing_col_chunk (time, device, temp) VALUES ('2018-01-12 05:00:00-8', 1, 19.5);
-- This should succeed since all required columns are now present
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', '{"time": [1515628800000000, 1516233600000000]}', NULL, NULL, 'missing_col_chunk');
 chunk_id | hypertable_id |      schema_name      |    table_name    | relkind |                     slices                     | created 
----------+---------------+-----------------------+------------------+---------+------------------------------------------------+---------
        8 |             2 | _timescaledb_internal | _hyper_2_8_chunk | r       | {"time": [1515628800000000, 1516233600000000]} | t
(1 row)

-- Test creating a chunk with mismatched column types
CREATE TABLE wrong_type_chunk (time timestamptz NOT NULL, device text, temp float CONSTRAINT chunkapi_temp_check CHECK (temp > 0));
-- This should fail due to type mismatch
\set ON_ERROR_STOP 0
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', '{"time": [1516233600000000, 1516838400000000]}', NULL, NULL, 'wrong_type_chunk');
ERROR:  child table "_hyper_2_9_chunk" has different type for column "device"
\set ON_ERROR_STOP 1
-- Test creating a chunk with binary coercible types
ALTER TABLE chunkapi ADD COLUMN name varchar(10);
CREATE TABLE coercible_type_chunk (time timestamptz NOT NULL, device int, temp float CONSTRAINT chunkapi_temp_check CHECK (temp > 0), name text);
INSERT INTO coercible_type_chunk (time, device, temp, name) VALUES ('2018-01-20 06:00:00-8', 1, 25.1, 'device1');
\set ON_ERROR_STOP 0
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', '{"time": [1516233600000000, 1516838400000000]}', NULL, NULL, 'coercible_type_chunk');
ERROR:  child table "_hyper_2_10_chunk" has different type for column "name"
\set ON_ERROR_STOP 1
ALTER TABLE chunkapi DROP COLUMN name;
-- Test data routing to the successfully created chunks. Each row should go to a different chunks
INSERT INTO chunkapi VALUES
    ('2018-01-01 05:00:00-8', 1, 23.4),
    ('2018-01-08 05:00:00-8', 1, 24.5),
    ('2018-01-15 05:00:00-8', 1, 25.6);
-- Verify data was routed correctly
SELECT
    'SELECT * FROM ' || chunk_schema || '.' || chunk_name
FROM timescaledb_information.chunks
WHERE hypertable_name = 'chunkapi'; \gexec
                       ?column?                       
------------------------------------------------------
 SELECT * FROM _timescaledb_internal._hyper_2_6_chunk
 SELECT * FROM _timescaledb_internal._hyper_2_7_chunk
 SELECT * FROM _timescaledb_internal._hyper_2_8_chunk
(3 rows)

SELECT * FROM _timescaledb_internal._hyper_2_6_chunk
             time             | device | temp 
------------------------------+--------+------
 Mon Jan 01 05:00:00 2018 PST |      1 | 23.4
(1 row)

SELECT * FROM _timescaledb_internal._hyper_2_7_chunk
 device | temp |             time             
--------+------+------------------------------
      1 | 24.5 | Mon Jan 08 05:00:00 2018 PST
(1 row)

SELECT * FROM _timescaledb_internal._hyper_2_8_chunk
             time             | device | temp 
------------------------------+--------+------
 Thu Jan 11 05:00:00 2018 PST |      1 |     
 Fri Jan 12 05:00:00 2018 PST |      1 | 19.5
 Mon Jan 15 05:00:00 2018 PST |      1 | 25.6
(3 rows)

TRUNCATE chunkapi;
-- Test generated columns
-- This should fail since generated column is not allowed in chunks if parent does not have the column as generated.
CREATE TABLE generated_col_chunk (time timestamptz NOT NULL, device int, temp float GENERATED ALWAYS AS (device::float) STORED, CONSTRAINT chunkapi_temp_check CHECK (temp > 0));
\set ON_ERROR_STOP 0
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', '{"time": [1516838400000000, 1517443200000000]}', NULL, NULL, 'generated_col_chunk');
ERROR:  column "temp" in chunk table must not be a generated column
DETAIL:  Chunk column must be generated if and only if parent column is also generated
\set ON_ERROR_STOP 1
-- When parent has a generated column while the chunk does not have the same column as generated, it should fail too.
CREATE TABLE non_generated_chunk (time timestamptz NOT NULL, device int, temp float, CONSTRAINT chunkapi_temp_check CHECK (temp > 0));
\set ON_ERROR_STOP 0
ALTER TABLE chunkapi DROP COLUMN temp;
ALTER TABLE chunkapi ADD COLUMN temp float GENERATED ALWAYS AS (device::float) STORED;
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', '{"time": [1517443200000000, 1518048000000000]}', NULL, NULL, 'non_generated_chunk');
ERROR:  column "temp" in child table must be a generated column
\set ON_ERROR_STOP 1
-- Generation expression cannot be different from the parent
\set ON_ERROR_STOP 0
ALTER TABLE generated_col_chunk DROP COLUMN temp;
ALTER TABLE generated_col_chunk ADD COLUMN temp float GENERATED ALWAYS AS ((device::float)+1) STORED;
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', '{"time": [1518048000000000, 1518652800000000]}', NULL, NULL, 'generated_col_chunk');
ERROR:  chunk column "temp" must have the same expression as the hypertable column.
\set ON_ERROR_STOP 1
-- This should succeed since the generated column is now the same as in the parent
ALTER TABLE generated_col_chunk DROP COLUMN temp;
ALTER TABLE generated_col_chunk ADD COLUMN temp float GENERATED ALWAYS AS ((device::float)) STORED;
SELECT * FROM _timescaledb_functions.create_chunk('chunkapi', '{"time": [1518652800000000, 1519257600000000]}', NULL, NULL, 'generated_col_chunk');
 chunk_id | hypertable_id |      schema_name      |    table_name     | relkind |                     slices                     | created 
----------+---------------+-----------------------+-------------------+---------+------------------------------------------------+---------
       12 |             2 | _timescaledb_internal | _hyper_2_12_chunk | r       | {"time": [1518652800000000, 1519257600000000]} | t
(1 row)

INSERT INTO chunkapi VALUES ('2018-02-20 05:00:00-8', 1);
SELECT
    'SELECT * FROM ' || chunk_schema || '.' || chunk_name
FROM timescaledb_information.chunks
WHERE hypertable_name = 'chunkapi'; \gexec
                       ?column?                        
-------------------------------------------------------
 SELECT * FROM _timescaledb_internal._hyper_2_12_chunk
(1 row)

SELECT * FROM _timescaledb_internal._hyper_2_12_chunk
             time             | device | temp 
------------------------------+--------+------
 Tue Feb 20 05:00:00 2018 PST |      1 |    1
(1 row)

DROP TABLE chunkapi;
