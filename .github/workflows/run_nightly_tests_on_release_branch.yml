name: "Run nightly tests on minor version branch"

"on":
  schedule:
    # run daily at 00:00 on the old minor version branch
    - cron: '0 0 * * *'

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout TimescaleDB
        uses: actions/checkout@v4

      - name: Set env var CURRENT_MAIN_VERSION
        run: echo "CURRENT_MAIN_VERSION=$(head -1 version.config | cut -d ' ' -f 3 | cut -d '-' -f 1)" >> $GITHUB_ENV
      - name: Test env var CURRENT_MAIN_VERSION
        run: echo $CURRENT_MAIN_VERSION

      - name: Set env var CURRENT_MINOR_VERSION
        run: echo "CURRENT_MINOR_VERSION=$(echo ${{ env.CURRENT_MAIN_VERSION }} | cut -d '.' -f 2)" >> $GITHUB_ENV
      - name: Test env var CURRENT_MINOR_VERSION
        run: echo $CURRENT_MINOR_VERSION

      - name: Set env var OLD_MINOR_VERSION
        run: echo "OLD_MINOR_VERSION=$((${{ env.CURRENT_MINOR_VERSION }} - 1))" >> $GITHUB_ENV
      - name: Test env var OLD_MINOR_VERSION
        run: echo $OLD_MINOR_VERSION

      - name: Set env var OLD_MINOR_VERSION_FULL
        run: echo "OLD_MINOR_VERSION_FULL=$(echo ${{ env.CURRENT_MAIN_VERSION }} | sed -e "s/${{ env.CURRENT_MINOR_VERSION }}/${{ env.OLD_MINOR_VERSION }}/g")" >> $GITHUB_ENV
      - name: Test env var OLD_MINOR_VERSION_FULL
        run: echo $OLD_MINOR_VERSION_FULL

      - name: Set env var OLD_MINOR_VERSION_BRANCH
        run: echo "OLD_MINOR_VERSION_BRANCH="${${{ env.OLD_MINOR_VERSION_FULL }}/%.0/.x}"" >> $GITHUB_ENV
      - name: Test env var OLD_MINOR_VERSION_BRANCH
        run: echo $OLD_MINOR_VERSION_BRANCH

      - name: Run nightly tests
        env:
          GH_TOKEN: ${{ secrets.ORG_AUTOMATION_TOKEN }}
        run: |
          gh workflow run linux-32bit-build-and-test.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run linux-build-and-test.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run rpm-packages.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run sanitizer-build-and-test.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run windows-build-and-test.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run snapshot-abi.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run abi.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run apt-arm-packages.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run apt-packages.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run docker-images.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run windows-packages.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run homebrew.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run libfuzzer.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
          gh workflow run sqlsmith.yaml -R timescale/timescaledb -f branch="$OLD_MINOR_VERSION_BRANCH"
